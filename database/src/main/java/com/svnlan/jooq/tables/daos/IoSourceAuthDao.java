/*
 * This file is generated by jOOQ.
 */
package com.svnlan.jooq.tables.daos;


import com.svnlan.jooq.tables.IoSourceAuth;
import com.svnlan.jooq.tables.pojos.IoSourceAuthModel;
import com.svnlan.jooq.tables.records.IoSourceAuthRecord;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * 文档权限表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IoSourceAuthDao extends DAOImpl<IoSourceAuthRecord, IoSourceAuthModel, Long> {

    /**
     * Create a new IoSourceAuthDao without any configuration
     */
    public IoSourceAuthDao() {
        super(IoSourceAuth.IO_SOURCE_AUTH, IoSourceAuthModel.class);
    }

    /**
     * Create a new IoSourceAuthDao with an attached configuration
     */
    public IoSourceAuthDao(Configuration configuration) {
        super(IoSourceAuth.IO_SOURCE_AUTH, IoSourceAuthModel.class, configuration);
    }

    @Override
    public Long getId(IoSourceAuthModel object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<IoSourceAuthModel> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(IoSourceAuth.IO_SOURCE_AUTH.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<IoSourceAuthModel> fetchById(Long... values) {
        return fetch(IoSourceAuth.IO_SOURCE_AUTH.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public IoSourceAuthModel fetchOneById(Long value) {
        return fetchOne(IoSourceAuth.IO_SOURCE_AUTH.ID, value);
    }

    /**
     * Fetch records that have <code>source_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<IoSourceAuthModel> fetchRangeOfSourceId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(IoSourceAuth.IO_SOURCE_AUTH.SOURCE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>source_id IN (values)</code>
     */
    public List<IoSourceAuthModel> fetchBySourceId(Long... values) {
        return fetch(IoSourceAuth.IO_SOURCE_AUTH.SOURCE_ID, values);
    }

    /**
     * Fetch records that have <code>target_type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<IoSourceAuthModel> fetchRangeOfTargetType(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(IoSourceAuth.IO_SOURCE_AUTH.TARGET_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>target_type IN (values)</code>
     */
    public List<IoSourceAuthModel> fetchByTargetType(Integer... values) {
        return fetch(IoSourceAuth.IO_SOURCE_AUTH.TARGET_TYPE, values);
    }

    /**
     * Fetch records that have <code>target_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<IoSourceAuthModel> fetchRangeOfTargetId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(IoSourceAuth.IO_SOURCE_AUTH.TARGET_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>target_id IN (values)</code>
     */
    public List<IoSourceAuthModel> fetchByTargetId(Long... values) {
        return fetch(IoSourceAuth.IO_SOURCE_AUTH.TARGET_ID, values);
    }

    /**
     * Fetch records that have <code>auth_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<IoSourceAuthModel> fetchRangeOfAuthId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(IoSourceAuth.IO_SOURCE_AUTH.AUTH_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>auth_id IN (values)</code>
     */
    public List<IoSourceAuthModel> fetchByAuthId(Integer... values) {
        return fetch(IoSourceAuth.IO_SOURCE_AUTH.AUTH_ID, values);
    }

    /**
     * Fetch records that have <code>auth_define BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<IoSourceAuthModel> fetchRangeOfAuthDefine(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(IoSourceAuth.IO_SOURCE_AUTH.AUTH_DEFINE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>auth_define IN (values)</code>
     */
    public List<IoSourceAuthModel> fetchByAuthDefine(Integer... values) {
        return fetch(IoSourceAuth.IO_SOURCE_AUTH.AUTH_DEFINE, values);
    }

    /**
     * Fetch records that have <code>create_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<IoSourceAuthModel> fetchRangeOfCreateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(IoSourceAuth.IO_SOURCE_AUTH.CREATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<IoSourceAuthModel> fetchByCreateTime(LocalDateTime... values) {
        return fetch(IoSourceAuth.IO_SOURCE_AUTH.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>modify_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<IoSourceAuthModel> fetchRangeOfModifyTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(IoSourceAuth.IO_SOURCE_AUTH.MODIFY_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>modify_time IN (values)</code>
     */
    public List<IoSourceAuthModel> fetchByModifyTime(LocalDateTime... values) {
        return fetch(IoSourceAuth.IO_SOURCE_AUTH.MODIFY_TIME, values);
    }

    /**
     * Fetch records that have <code>tenant_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<IoSourceAuthModel> fetchRangeOfTenantId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(IoSourceAuth.IO_SOURCE_AUTH.TENANT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tenant_id IN (values)</code>
     */
    public List<IoSourceAuthModel> fetchByTenantId(Long... values) {
        return fetch(IoSourceAuth.IO_SOURCE_AUTH.TENANT_ID, values);
    }
}

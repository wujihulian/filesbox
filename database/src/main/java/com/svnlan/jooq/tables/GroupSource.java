/*
 * This file is generated by jOOQ.
 */
package com.svnlan.jooq.tables;


import com.svnlan.jooq.CloudDisk;
import com.svnlan.jooq.tables.records.GroupSourceRecord;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 群组、文件关系表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GroupSource extends TableImpl<GroupSourceRecord> {

    private static final long serialVersionUID = 1338684847;

    /**
     * The reference instance of <code>cloud_disk.group_source</code>
     */
    public static final GroupSource GROUP_SOURCE = new GroupSource();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GroupSourceRecord> getRecordType() {
        return GroupSourceRecord.class;
    }

    /**
     * The column <code>cloud_disk.group_source.group_id</code>. 群组id
     */
    public final TableField<GroupSourceRecord, Long> GROUP_ID = createField(DSL.name("group_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "群组id");

    /**
     * The column <code>cloud_disk.group_source.source_id</code>. 文件夹id
     */
    public final TableField<GroupSourceRecord, Long> SOURCE_ID = createField(DSL.name("source_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "文件夹id");

    /**
     * The column <code>cloud_disk.group_source.create_time</code>. 创建时间
     */
    public final TableField<GroupSourceRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "创建时间");

    /**
     * The column <code>cloud_disk.group_source.tenant_id</code>. 租户id
     */
    public final TableField<GroupSourceRecord, Long> TENANT_ID = createField(DSL.name("tenant_id"), org.jooq.impl.SQLDataType.BIGINT, this, "租户id");

    /**
     * Create a <code>cloud_disk.group_source</code> table reference
     */
    public GroupSource() {
        this(DSL.name("group_source"), null);
    }

    /**
     * Create an aliased <code>cloud_disk.group_source</code> table reference
     */
    public GroupSource(String alias) {
        this(DSL.name(alias), GROUP_SOURCE);
    }

    /**
     * Create an aliased <code>cloud_disk.group_source</code> table reference
     */
    public GroupSource(Name alias) {
        this(alias, GROUP_SOURCE);
    }

    private GroupSource(Name alias, Table<GroupSourceRecord> aliased) {
        this(alias, aliased, null);
    }

    private GroupSource(Name alias, Table<GroupSourceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("群组、文件关系表"));
    }

    public <O extends Record> GroupSource(Table<O> child, ForeignKey<O, GroupSourceRecord> key) {
        super(child, key, GROUP_SOURCE);
    }

    @Override
    public Schema getSchema() {
        return CloudDisk.CLOUD_DISK;
    }

    @Override
    public GroupSource as(String alias) {
        return new GroupSource(DSL.name(alias), this);
    }

    @Override
    public GroupSource as(Name alias) {
        return new GroupSource(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public GroupSource rename(String name) {
        return new GroupSource(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public GroupSource rename(Name name) {
        return new GroupSource(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Long, LocalDateTime, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}

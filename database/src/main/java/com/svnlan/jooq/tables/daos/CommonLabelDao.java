/*
 * This file is generated by jOOQ.
 */
package com.svnlan.jooq.tables.daos;


import com.svnlan.jooq.tables.CommonLabel;
import com.svnlan.jooq.tables.pojos.CommonLabelModel;
import com.svnlan.jooq.tables.records.CommonLabelRecord;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * 标签表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CommonLabelDao extends DAOImpl<CommonLabelRecord, CommonLabelModel, Long> {

    /**
     * Create a new CommonLabelDao without any configuration
     */
    public CommonLabelDao() {
        super(CommonLabel.COMMON_LABEL, CommonLabelModel.class);
    }

    /**
     * Create a new CommonLabelDao with an attached configuration
     */
    public CommonLabelDao(Configuration configuration) {
        super(CommonLabel.COMMON_LABEL, CommonLabelModel.class, configuration);
    }

    @Override
    public Long getId(CommonLabelModel object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonLabelModel> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(CommonLabel.COMMON_LABEL.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<CommonLabelModel> fetchById(Long... values) {
        return fetch(CommonLabel.COMMON_LABEL.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public CommonLabelModel fetchOneById(Long value) {
        return fetchOne(CommonLabel.COMMON_LABEL.ID, value);
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonLabelModel> fetchRangeOfUserId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(CommonLabel.COMMON_LABEL.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<CommonLabelModel> fetchByUserId(Long... values) {
        return fetch(CommonLabel.COMMON_LABEL.USER_ID, values);
    }

    /**
     * Fetch records that have <code>label_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonLabelModel> fetchRangeOfLabelName(String lowerInclusive, String upperInclusive) {
        return fetchRange(CommonLabel.COMMON_LABEL.LABEL_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>label_name IN (values)</code>
     */
    public List<CommonLabelModel> fetchByLabelName(String... values) {
        return fetch(CommonLabel.COMMON_LABEL.LABEL_NAME, values);
    }

    /**
     * Fetch records that have <code>label_en_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonLabelModel> fetchRangeOfLabelEnName(String lowerInclusive, String upperInclusive) {
        return fetchRange(CommonLabel.COMMON_LABEL.LABEL_EN_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>label_en_name IN (values)</code>
     */
    public List<CommonLabelModel> fetchByLabelEnName(String... values) {
        return fetch(CommonLabel.COMMON_LABEL.LABEL_EN_NAME, values);
    }

    /**
     * Fetch records that have <code>en_name_simple BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonLabelModel> fetchRangeOfEnNameSimple(String lowerInclusive, String upperInclusive) {
        return fetchRange(CommonLabel.COMMON_LABEL.EN_NAME_SIMPLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>en_name_simple IN (values)</code>
     */
    public List<CommonLabelModel> fetchByEnNameSimple(String... values) {
        return fetch(CommonLabel.COMMON_LABEL.EN_NAME_SIMPLE, values);
    }

    /**
     * Fetch records that have <code>status BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonLabelModel> fetchRangeOfStatus(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(CommonLabel.COMMON_LABEL.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<CommonLabelModel> fetchByStatus(Integer... values) {
        return fetch(CommonLabel.COMMON_LABEL.STATUS, values);
    }

    /**
     * Fetch records that have <code>style BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonLabelModel> fetchRangeOfStyle(String lowerInclusive, String upperInclusive) {
        return fetchRange(CommonLabel.COMMON_LABEL.STYLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>style IN (values)</code>
     */
    public List<CommonLabelModel> fetchByStyle(String... values) {
        return fetch(CommonLabel.COMMON_LABEL.STYLE, values);
    }

    /**
     * Fetch records that have <code>sort BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonLabelModel> fetchRangeOfSort(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(CommonLabel.COMMON_LABEL.SORT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>sort IN (values)</code>
     */
    public List<CommonLabelModel> fetchBySort(Integer... values) {
        return fetch(CommonLabel.COMMON_LABEL.SORT, values);
    }

    /**
     * Fetch records that have <code>tag_type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonLabelModel> fetchRangeOfTagType(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(CommonLabel.COMMON_LABEL.TAG_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tag_type IN (values)</code>
     */
    public List<CommonLabelModel> fetchByTagType(Integer... values) {
        return fetch(CommonLabel.COMMON_LABEL.TAG_TYPE, values);
    }

    /**
     * Fetch records that have <code>create_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonLabelModel> fetchRangeOfCreateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(CommonLabel.COMMON_LABEL.CREATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<CommonLabelModel> fetchByCreateTime(LocalDateTime... values) {
        return fetch(CommonLabel.COMMON_LABEL.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>modify_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonLabelModel> fetchRangeOfModifyTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(CommonLabel.COMMON_LABEL.MODIFY_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>modify_time IN (values)</code>
     */
    public List<CommonLabelModel> fetchByModifyTime(LocalDateTime... values) {
        return fetch(CommonLabel.COMMON_LABEL.MODIFY_TIME, values);
    }

    /**
     * Fetch records that have <code>tenant_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonLabelModel> fetchRangeOfTenantId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(CommonLabel.COMMON_LABEL.TENANT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tenant_id IN (values)</code>
     */
    public List<CommonLabelModel> fetchByTenantId(Long... values) {
        return fetch(CommonLabel.COMMON_LABEL.TENANT_ID, values);
    }
}

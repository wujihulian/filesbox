/*
 * This file is generated by jOOQ.
 */
package com.svnlan.jooq.tables.records;


import com.svnlan.jooq.tables.IoFile;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record20;
import org.jooq.Row20;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 文档存储表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IoFileRecord extends UpdatableRecordImpl<IoFileRecord> implements Record20<Long, String, Long, Long, String, String, String, Integer, Integer, Integer, Integer, Integer, Integer, String, Long, Long, LocalDateTime, LocalDateTime, Long, Long> {

    private static final long serialVersionUID = -1179860861;

    /**
     * Setter for <code>cloud_disk.io_file.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>cloud_disk.io_file.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>cloud_disk.io_file.name</code>. 文件名
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>cloud_disk.io_file.name</code>. 文件名
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>cloud_disk.io_file.size</code>. 文件大小
     */
    public void setSize(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>cloud_disk.io_file.size</code>. 文件大小
     */
    public Long getSize() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>cloud_disk.io_file.io_type</code>. io的id
     */
    public void setIoType(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>cloud_disk.io_file.io_type</code>. io的id
     */
    public Long getIoType() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>cloud_disk.io_file.path</code>. 文件路径
     */
    public void setPath(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>cloud_disk.io_file.path</code>. 文件路径
     */
    public String getPath() {
        return (String) get(4);
    }

    /**
     * Setter for <code>cloud_disk.io_file.hash_simple</code>. 文件简易hash(不全覆盖)；hashSimple
     */
    public void setHashSimple(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>cloud_disk.io_file.hash_simple</code>. 文件简易hash(不全覆盖)；hashSimple
     */
    public String getHashSimple() {
        return (String) get(5);
    }

    /**
     * Setter for <code>cloud_disk.io_file.hash_md5</code>. 文件hash, md5
     */
    public void setHashMd5(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>cloud_disk.io_file.hash_md5</code>. 文件hash, md5
     */
    public String getHashMd5() {
        return (String) get(6);
    }

    /**
     * Setter for <code>cloud_disk.io_file.link_count</code>. 引用次数;0则定期删除
     */
    public void setLinkCount(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>cloud_disk.io_file.link_count</code>. 引用次数;0则定期删除
     */
    public Integer getLinkCount() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>cloud_disk.io_file.is_preview</code>. 是否支持预览,0否，1是
     */
    public void setIsPreview(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>cloud_disk.io_file.is_preview</code>. 是否支持预览,0否，1是
     */
    public Integer getIsPreview() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>cloud_disk.io_file.app_preview</code>. 是否支持APP上的文档预览，主要指doc转成pdf后的html5预览
     */
    public void setAppPreview(Integer value) {
        set(9, value);
    }

    /**
     * Getter for <code>cloud_disk.io_file.app_preview</code>. 是否支持APP上的文档预览，主要指doc转成pdf后的html5预览
     */
    public Integer getAppPreview() {
        return (Integer) get(9);
    }

    /**
     * Setter for <code>cloud_disk.io_file.is_h264_preview</code>. 视频转h264是否成功, 0未成功,1成功,2失败
     */
    public void setIsH264Preview(Integer value) {
        set(10, value);
    }

    /**
     * Getter for <code>cloud_disk.io_file.is_h264_preview</code>. 视频转h264是否成功, 0未成功,1成功,2失败
     */
    public Integer getIsH264Preview() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>cloud_disk.io_file.is_m3u8</code>. 源文件为视频类型时,表示是否已经切片处理成m3u8格式,0否1是;文档类型(doc,ppt等)时,表示是否转成flash,0否1是
     */
    public void setIsM3u8(Integer value) {
        set(11, value);
    }

    /**
     * Getter for <code>cloud_disk.io_file.is_m3u8</code>. 源文件为视频类型时,表示是否已经切片处理成m3u8格式,0否1是;文档类型(doc,ppt等)时,表示是否转成flash,0否1是
     */
    public Integer getIsM3u8() {
        return (Integer) get(11);
    }

    /**
     * Setter for <code>cloud_disk.io_file.is_exist_file</code>. 原始文件是否存在 0 否 1 是
     */
    public void setIsExistFile(Integer value) {
        set(12, value);
    }

    /**
     * Getter for <code>cloud_disk.io_file.is_exist_file</code>. 原始文件是否存在 0 否 1 是
     */
    public Integer getIsExistFile() {
        return (Integer) get(12);
    }

    /**
     * Setter for <code>cloud_disk.io_file.file_name</code>. 文件名
     */
    public void setFileName(String value) {
        set(13, value);
    }

    /**
     * Getter for <code>cloud_disk.io_file.file_name</code>. 文件名
     */
    public String getFileName() {
        return (String) get(13);
    }

    /**
     * Setter for <code>cloud_disk.io_file.convert_size</code>. 转码文件占用空间大小
     */
    public void setConvertSize(Long value) {
        set(14, value);
    }

    /**
     * Getter for <code>cloud_disk.io_file.convert_size</code>. 转码文件占用空间大小
     */
    public Long getConvertSize() {
        return (Long) get(14);
    }

    /**
     * Setter for <code>cloud_disk.io_file.thumb_size</code>. 缩略图占用空间
     */
    public void setThumbSize(Long value) {
        set(15, value);
    }

    /**
     * Getter for <code>cloud_disk.io_file.thumb_size</code>. 缩略图占用空间
     */
    public Long getThumbSize() {
        return (Long) get(15);
    }

    /**
     * Setter for <code>cloud_disk.io_file.create_time</code>. 创建时间
     */
    public void setCreateTime(LocalDateTime value) {
        set(16, value);
    }

    /**
     * Getter for <code>cloud_disk.io_file.create_time</code>. 创建时间
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(16);
    }

    /**
     * Setter for <code>cloud_disk.io_file.modify_time</code>. 最后修改时间
     */
    public void setModifyTime(LocalDateTime value) {
        set(17, value);
    }

    /**
     * Getter for <code>cloud_disk.io_file.modify_time</code>. 最后修改时间
     */
    public LocalDateTime getModifyTime() {
        return (LocalDateTime) get(17);
    }

    /**
     * Setter for <code>cloud_disk.io_file.tenant_id</code>. 租户id
     */
    public void setTenantId(Long value) {
        set(18, value);
    }

    /**
     * Getter for <code>cloud_disk.io_file.tenant_id</code>. 租户id
     */
    public Long getTenantId() {
        return (Long) get(18);
    }

    /**
     * Setter for <code>cloud_disk.io_file.user_id</code>. 创建人id
     */
    public void setUserId(Long value) {
        set(19, value);
    }

    /**
     * Getter for <code>cloud_disk.io_file.user_id</code>. 创建人id
     */
    public Long getUserId() {
        return (Long) get(19);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record20 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row20<Long, String, Long, Long, String, String, String, Integer, Integer, Integer, Integer, Integer, Integer, String, Long, Long, LocalDateTime, LocalDateTime, Long, Long> fieldsRow() {
        return (Row20) super.fieldsRow();
    }

    @Override
    public Row20<Long, String, Long, Long, String, String, String, Integer, Integer, Integer, Integer, Integer, Integer, String, Long, Long, LocalDateTime, LocalDateTime, Long, Long> valuesRow() {
        return (Row20) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return IoFile.IO_FILE.ID;
    }

    @Override
    public Field<String> field2() {
        return IoFile.IO_FILE.NAME;
    }

    @Override
    public Field<Long> field3() {
        return IoFile.IO_FILE.SIZE;
    }

    @Override
    public Field<Long> field4() {
        return IoFile.IO_FILE.IO_TYPE;
    }

    @Override
    public Field<String> field5() {
        return IoFile.IO_FILE.PATH;
    }

    @Override
    public Field<String> field6() {
        return IoFile.IO_FILE.HASH_SIMPLE;
    }

    @Override
    public Field<String> field7() {
        return IoFile.IO_FILE.HASH_MD5;
    }

    @Override
    public Field<Integer> field8() {
        return IoFile.IO_FILE.LINK_COUNT;
    }

    @Override
    public Field<Integer> field9() {
        return IoFile.IO_FILE.IS_PREVIEW;
    }

    @Override
    public Field<Integer> field10() {
        return IoFile.IO_FILE.APP_PREVIEW;
    }

    @Override
    public Field<Integer> field11() {
        return IoFile.IO_FILE.IS_H264_PREVIEW;
    }

    @Override
    public Field<Integer> field12() {
        return IoFile.IO_FILE.IS_M3U8;
    }

    @Override
    public Field<Integer> field13() {
        return IoFile.IO_FILE.IS_EXIST_FILE;
    }

    @Override
    public Field<String> field14() {
        return IoFile.IO_FILE.FILE_NAME;
    }

    @Override
    public Field<Long> field15() {
        return IoFile.IO_FILE.CONVERT_SIZE;
    }

    @Override
    public Field<Long> field16() {
        return IoFile.IO_FILE.THUMB_SIZE;
    }

    @Override
    public Field<LocalDateTime> field17() {
        return IoFile.IO_FILE.CREATE_TIME;
    }

    @Override
    public Field<LocalDateTime> field18() {
        return IoFile.IO_FILE.MODIFY_TIME;
    }

    @Override
    public Field<Long> field19() {
        return IoFile.IO_FILE.TENANT_ID;
    }

    @Override
    public Field<Long> field20() {
        return IoFile.IO_FILE.USER_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Long component3() {
        return getSize();
    }

    @Override
    public Long component4() {
        return getIoType();
    }

    @Override
    public String component5() {
        return getPath();
    }

    @Override
    public String component6() {
        return getHashSimple();
    }

    @Override
    public String component7() {
        return getHashMd5();
    }

    @Override
    public Integer component8() {
        return getLinkCount();
    }

    @Override
    public Integer component9() {
        return getIsPreview();
    }

    @Override
    public Integer component10() {
        return getAppPreview();
    }

    @Override
    public Integer component11() {
        return getIsH264Preview();
    }

    @Override
    public Integer component12() {
        return getIsM3u8();
    }

    @Override
    public Integer component13() {
        return getIsExistFile();
    }

    @Override
    public String component14() {
        return getFileName();
    }

    @Override
    public Long component15() {
        return getConvertSize();
    }

    @Override
    public Long component16() {
        return getThumbSize();
    }

    @Override
    public LocalDateTime component17() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime component18() {
        return getModifyTime();
    }

    @Override
    public Long component19() {
        return getTenantId();
    }

    @Override
    public Long component20() {
        return getUserId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Long value3() {
        return getSize();
    }

    @Override
    public Long value4() {
        return getIoType();
    }

    @Override
    public String value5() {
        return getPath();
    }

    @Override
    public String value6() {
        return getHashSimple();
    }

    @Override
    public String value7() {
        return getHashMd5();
    }

    @Override
    public Integer value8() {
        return getLinkCount();
    }

    @Override
    public Integer value9() {
        return getIsPreview();
    }

    @Override
    public Integer value10() {
        return getAppPreview();
    }

    @Override
    public Integer value11() {
        return getIsH264Preview();
    }

    @Override
    public Integer value12() {
        return getIsM3u8();
    }

    @Override
    public Integer value13() {
        return getIsExistFile();
    }

    @Override
    public String value14() {
        return getFileName();
    }

    @Override
    public Long value15() {
        return getConvertSize();
    }

    @Override
    public Long value16() {
        return getThumbSize();
    }

    @Override
    public LocalDateTime value17() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime value18() {
        return getModifyTime();
    }

    @Override
    public Long value19() {
        return getTenantId();
    }

    @Override
    public Long value20() {
        return getUserId();
    }

    @Override
    public IoFileRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public IoFileRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public IoFileRecord value3(Long value) {
        setSize(value);
        return this;
    }

    @Override
    public IoFileRecord value4(Long value) {
        setIoType(value);
        return this;
    }

    @Override
    public IoFileRecord value5(String value) {
        setPath(value);
        return this;
    }

    @Override
    public IoFileRecord value6(String value) {
        setHashSimple(value);
        return this;
    }

    @Override
    public IoFileRecord value7(String value) {
        setHashMd5(value);
        return this;
    }

    @Override
    public IoFileRecord value8(Integer value) {
        setLinkCount(value);
        return this;
    }

    @Override
    public IoFileRecord value9(Integer value) {
        setIsPreview(value);
        return this;
    }

    @Override
    public IoFileRecord value10(Integer value) {
        setAppPreview(value);
        return this;
    }

    @Override
    public IoFileRecord value11(Integer value) {
        setIsH264Preview(value);
        return this;
    }

    @Override
    public IoFileRecord value12(Integer value) {
        setIsM3u8(value);
        return this;
    }

    @Override
    public IoFileRecord value13(Integer value) {
        setIsExistFile(value);
        return this;
    }

    @Override
    public IoFileRecord value14(String value) {
        setFileName(value);
        return this;
    }

    @Override
    public IoFileRecord value15(Long value) {
        setConvertSize(value);
        return this;
    }

    @Override
    public IoFileRecord value16(Long value) {
        setThumbSize(value);
        return this;
    }

    @Override
    public IoFileRecord value17(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public IoFileRecord value18(LocalDateTime value) {
        setModifyTime(value);
        return this;
    }

    @Override
    public IoFileRecord value19(Long value) {
        setTenantId(value);
        return this;
    }

    @Override
    public IoFileRecord value20(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public IoFileRecord values(Long value1, String value2, Long value3, Long value4, String value5, String value6, String value7, Integer value8, Integer value9, Integer value10, Integer value11, Integer value12, Integer value13, String value14, Long value15, Long value16, LocalDateTime value17, LocalDateTime value18, Long value19, Long value20) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        value20(value20);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached IoFileRecord
     */
    public IoFileRecord() {
        super(IoFile.IO_FILE);
    }

    /**
     * Create a detached, initialised IoFileRecord
     */
    public IoFileRecord(Long id, String name, Long size, Long ioType, String path, String hashSimple, String hashMd5, Integer linkCount, Integer isPreview, Integer appPreview, Integer isH264Preview, Integer isM3u8, Integer isExistFile, String fileName, Long convertSize, Long thumbSize, LocalDateTime createTime, LocalDateTime modifyTime, Long tenantId, Long userId) {
        super(IoFile.IO_FILE);

        set(0, id);
        set(1, name);
        set(2, size);
        set(3, ioType);
        set(4, path);
        set(5, hashSimple);
        set(6, hashMd5);
        set(7, linkCount);
        set(8, isPreview);
        set(9, appPreview);
        set(10, isH264Preview);
        set(11, isM3u8);
        set(12, isExistFile);
        set(13, fileName);
        set(14, convertSize);
        set(15, thumbSize);
        set(16, createTime);
        set(17, modifyTime);
        set(18, tenantId);
        set(19, userId);
    }
}

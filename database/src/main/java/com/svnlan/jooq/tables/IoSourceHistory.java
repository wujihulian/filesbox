/*
 * This file is generated by jOOQ.
 */
package com.svnlan.jooq.tables;


import com.svnlan.jooq.CloudDisk;
import com.svnlan.jooq.Indexes;
import com.svnlan.jooq.Keys;
import com.svnlan.jooq.tables.records.IoSourceHistoryRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 文档历史记录表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IoSourceHistory extends TableImpl<IoSourceHistoryRecord> {

    private static final long serialVersionUID = -197388408;

    /**
     * The reference instance of <code>cloud_disk.io_source_history</code>
     */
    public static final IoSourceHistory IO_SOURCE_HISTORY = new IoSourceHistory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<IoSourceHistoryRecord> getRecordType() {
        return IoSourceHistoryRecord.class;
    }

    /**
     * The column <code>cloud_disk.io_source_history.id</code>.
     */
    public final TableField<IoSourceHistoryRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>cloud_disk.io_source_history.source_id</code>. 文档资源id
     */
    public final TableField<IoSourceHistoryRecord, Long> SOURCE_ID = createField(DSL.name("source_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "文档资源id");

    /**
     * The column <code>cloud_disk.io_source_history.user_id</code>. 用户id, 对部门时此id为0
     */
    public final TableField<IoSourceHistoryRecord, Long> USER_ID = createField(DSL.name("user_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "用户id, 对部门时此id为0");

    /**
     * The column <code>cloud_disk.io_source_history.file_id</code>. 当前版本对应存储资源id
     */
    public final TableField<IoSourceHistoryRecord, Long> FILE_ID = createField(DSL.name("file_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "当前版本对应存储资源id");

    /**
     * The column <code>cloud_disk.io_source_history.size</code>. 文件大小
     */
    public final TableField<IoSourceHistoryRecord, Long> SIZE = createField(DSL.name("size"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "文件大小");

    /**
     * The column <code>cloud_disk.io_source_history.detail</code>. 版本描述
     */
    public final TableField<IoSourceHistoryRecord, String> DETAIL = createField(DSL.name("detail"), org.jooq.impl.SQLDataType.VARCHAR(1024).nullable(false), this, "版本描述");

    /**
     * The column <code>cloud_disk.io_source_history.create_time</code>. 创建时间
     */
    public final TableField<IoSourceHistoryRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "创建时间");

    /**
     * The column <code>cloud_disk.io_source_history.modify_time</code>. 最后修改时间
     */
    public final TableField<IoSourceHistoryRecord, LocalDateTime> MODIFY_TIME = createField(DSL.name("modify_time"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "最后修改时间");

    /**
     * The column <code>cloud_disk.io_source_history.tenant_id</code>. 租户id
     */
    public final TableField<IoSourceHistoryRecord, Long> TENANT_ID = createField(DSL.name("tenant_id"), org.jooq.impl.SQLDataType.BIGINT, this, "租户id");

    /**
     * Create a <code>cloud_disk.io_source_history</code> table reference
     */
    public IoSourceHistory() {
        this(DSL.name("io_source_history"), null);
    }

    /**
     * Create an aliased <code>cloud_disk.io_source_history</code> table reference
     */
    public IoSourceHistory(String alias) {
        this(DSL.name(alias), IO_SOURCE_HISTORY);
    }

    /**
     * Create an aliased <code>cloud_disk.io_source_history</code> table reference
     */
    public IoSourceHistory(Name alias) {
        this(alias, IO_SOURCE_HISTORY);
    }

    private IoSourceHistory(Name alias, Table<IoSourceHistoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private IoSourceHistory(Name alias, Table<IoSourceHistoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("文档历史记录表"));
    }

    public <O extends Record> IoSourceHistory(Table<O> child, ForeignKey<O, IoSourceHistoryRecord> key) {
        super(child, key, IO_SOURCE_HISTORY);
    }

    @Override
    public Schema getSchema() {
        return CloudDisk.CLOUD_DISK;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.IO_SOURCE_HISTORY_PRIMARY);
    }

    @Override
    public Identity<IoSourceHistoryRecord, Long> getIdentity() {
        return Keys.IDENTITY_IO_SOURCE_HISTORY;
    }

    @Override
    public UniqueKey<IoSourceHistoryRecord> getPrimaryKey() {
        return Keys.KEY_IO_SOURCE_HISTORY_PRIMARY;
    }

    @Override
    public List<UniqueKey<IoSourceHistoryRecord>> getKeys() {
        return Arrays.<UniqueKey<IoSourceHistoryRecord>>asList(Keys.KEY_IO_SOURCE_HISTORY_PRIMARY);
    }

    @Override
    public IoSourceHistory as(String alias) {
        return new IoSourceHistory(DSL.name(alias), this);
    }

    @Override
    public IoSourceHistory as(Name alias) {
        return new IoSourceHistory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public IoSourceHistory rename(String name) {
        return new IoSourceHistory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public IoSourceHistory rename(Name name) {
        return new IoSourceHistory(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, Long, Long, Long, Long, String, LocalDateTime, LocalDateTime, Long> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}

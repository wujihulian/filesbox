/*
 * This file is generated by jOOQ.
 */
package com.svnlan.jooq.tables.daos;


import com.svnlan.jooq.tables.GroupMeta;
import com.svnlan.jooq.tables.pojos.GroupMetaModel;
import com.svnlan.jooq.tables.records.GroupMetaRecord;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * 用户数据扩展表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GroupMetaDao extends DAOImpl<GroupMetaRecord, GroupMetaModel, Long> {

    /**
     * Create a new GroupMetaDao without any configuration
     */
    public GroupMetaDao() {
        super(GroupMeta.GROUP_META, GroupMetaModel.class);
    }

    /**
     * Create a new GroupMetaDao with an attached configuration
     */
    public GroupMetaDao(Configuration configuration) {
        super(GroupMeta.GROUP_META, GroupMetaModel.class, configuration);
    }

    @Override
    public Long getId(GroupMetaModel object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<GroupMetaModel> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(GroupMeta.GROUP_META.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<GroupMetaModel> fetchById(Long... values) {
        return fetch(GroupMeta.GROUP_META.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public GroupMetaModel fetchOneById(Long value) {
        return fetchOne(GroupMeta.GROUP_META.ID, value);
    }

    /**
     * Fetch records that have <code>group_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<GroupMetaModel> fetchRangeOfGroupId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(GroupMeta.GROUP_META.GROUP_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>group_id IN (values)</code>
     */
    public List<GroupMetaModel> fetchByGroupId(Long... values) {
        return fetch(GroupMeta.GROUP_META.GROUP_ID, values);
    }

    /**
     * Fetch records that have <code>key_string BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<GroupMetaModel> fetchRangeOfKeyString(String lowerInclusive, String upperInclusive) {
        return fetchRange(GroupMeta.GROUP_META.KEY_STRING, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>key_string IN (values)</code>
     */
    public List<GroupMetaModel> fetchByKeyString(String... values) {
        return fetch(GroupMeta.GROUP_META.KEY_STRING, values);
    }

    /**
     * Fetch records that have <code>value_text BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<GroupMetaModel> fetchRangeOfValueText(String lowerInclusive, String upperInclusive) {
        return fetchRange(GroupMeta.GROUP_META.VALUE_TEXT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>value_text IN (values)</code>
     */
    public List<GroupMetaModel> fetchByValueText(String... values) {
        return fetch(GroupMeta.GROUP_META.VALUE_TEXT, values);
    }

    /**
     * Fetch records that have <code>create_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<GroupMetaModel> fetchRangeOfCreateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(GroupMeta.GROUP_META.CREATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<GroupMetaModel> fetchByCreateTime(LocalDateTime... values) {
        return fetch(GroupMeta.GROUP_META.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>modify_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<GroupMetaModel> fetchRangeOfModifyTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(GroupMeta.GROUP_META.MODIFY_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>modify_time IN (values)</code>
     */
    public List<GroupMetaModel> fetchByModifyTime(LocalDateTime... values) {
        return fetch(GroupMeta.GROUP_META.MODIFY_TIME, values);
    }

    /**
     * Fetch records that have <code>tenant_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<GroupMetaModel> fetchRangeOfTenantId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(GroupMeta.GROUP_META.TENANT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tenant_id IN (values)</code>
     */
    public List<GroupMetaModel> fetchByTenantId(Long... values) {
        return fetch(GroupMeta.GROUP_META.TENANT_ID, values);
    }
}

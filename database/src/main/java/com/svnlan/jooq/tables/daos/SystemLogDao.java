/*
 * This file is generated by jOOQ.
 */
package com.svnlan.jooq.tables.daos;


import com.svnlan.jooq.tables.SystemLog;
import com.svnlan.jooq.tables.pojos.SystemLogModel;
import com.svnlan.jooq.tables.records.SystemLogRecord;

import java.time.LocalDateTime;
import java.util.Date;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * 系统日志表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SystemLogDao extends DAOImpl<SystemLogRecord, SystemLogModel, Long> {

    /**
     * Create a new SystemLogDao without any configuration
     */
    public SystemLogDao() {
        super(SystemLog.SYSTEM_LOG, SystemLogModel.class);
    }

    /**
     * Create a new SystemLogDao with an attached configuration
     */
    public SystemLogDao(Configuration configuration) {
        super(SystemLog.SYSTEM_LOG, SystemLogModel.class, configuration);
    }

    @Override
    public Long getId(SystemLogModel object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<SystemLogModel> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(SystemLog.SYSTEM_LOG.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<SystemLogModel> fetchById(Long... values) {
        return fetch(SystemLog.SYSTEM_LOG.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public SystemLogModel fetchOneById(Long value) {
        return fetchOne(SystemLog.SYSTEM_LOG.ID, value);
    }

    /**
     * Fetch records that have <code>session_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<SystemLogModel> fetchRangeOfSessionId(String lowerInclusive, String upperInclusive) {
        return fetchRange(SystemLog.SYSTEM_LOG.SESSION_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>session_id IN (values)</code>
     */
    public List<SystemLogModel> fetchBySessionId(String... values) {
        return fetch(SystemLog.SYSTEM_LOG.SESSION_ID, values);
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<SystemLogModel> fetchRangeOfUserId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(SystemLog.SYSTEM_LOG.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<SystemLogModel> fetchByUserId(Long... values) {
        return fetch(SystemLog.SYSTEM_LOG.USER_ID, values);
    }

    /**
     * Fetch records that have <code>type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<SystemLogModel> fetchRangeOfType(String lowerInclusive, String upperInclusive) {
        return fetchRange(SystemLog.SYSTEM_LOG.TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<SystemLogModel> fetchByType(String... values) {
        return fetch(SystemLog.SYSTEM_LOG.TYPE, values);
    }

    /**
     * Fetch records that have <code>detail BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<SystemLogModel> fetchRangeOfDetail(String lowerInclusive, String upperInclusive) {
        return fetchRange(SystemLog.SYSTEM_LOG.DETAIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>detail IN (values)</code>
     */
    public List<SystemLogModel> fetchByDetail(String... values) {
        return fetch(SystemLog.SYSTEM_LOG.DETAIL, values);
    }

    /**
     * Fetch records that have <code>visit_date BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<SystemLogModel> fetchRangeOfVisitDate(Date lowerInclusive, Date upperInclusive) {
        return fetchRange(SystemLog.SYSTEM_LOG.VISIT_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>visit_date IN (values)</code>
     */
    public List<SystemLogModel> fetchByVisitDate(Date... values) {
        return fetch(SystemLog.SYSTEM_LOG.VISIT_DATE, values);
    }

    /**
     * Fetch records that have <code>client_type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<SystemLogModel> fetchRangeOfClientType(String lowerInclusive, String upperInclusive) {
        return fetchRange(SystemLog.SYSTEM_LOG.CLIENT_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>client_type IN (values)</code>
     */
    public List<SystemLogModel> fetchByClientType(String... values) {
        return fetch(SystemLog.SYSTEM_LOG.CLIENT_TYPE, values);
    }

    /**
     * Fetch records that have <code>os_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<SystemLogModel> fetchRangeOfOsName(String lowerInclusive, String upperInclusive) {
        return fetchRange(SystemLog.SYSTEM_LOG.OS_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>os_name IN (values)</code>
     */
    public List<SystemLogModel> fetchByOsName(String... values) {
        return fetch(SystemLog.SYSTEM_LOG.OS_NAME, values);
    }

    /**
     * Fetch records that have <code>create_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<SystemLogModel> fetchRangeOfCreateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(SystemLog.SYSTEM_LOG.CREATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<SystemLogModel> fetchByCreateTime(LocalDateTime... values) {
        return fetch(SystemLog.SYSTEM_LOG.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>tenant_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<SystemLogModel> fetchRangeOfTenantId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(SystemLog.SYSTEM_LOG.TENANT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tenant_id IN (values)</code>
     */
    public List<SystemLogModel> fetchByTenantId(Long... values) {
        return fetch(SystemLog.SYSTEM_LOG.TENANT_ID, values);
    }
}

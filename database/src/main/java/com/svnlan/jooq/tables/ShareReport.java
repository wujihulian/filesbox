/*
 * This file is generated by jOOQ.
 */
package com.svnlan.jooq.tables;


import com.svnlan.jooq.CloudDisk;
import com.svnlan.jooq.Indexes;
import com.svnlan.jooq.Keys;
import com.svnlan.jooq.tables.records.ShareReportRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row12;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 分享举报表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ShareReport extends TableImpl<ShareReportRecord> {

    private static final long serialVersionUID = 2022031008;

    /**
     * The reference instance of <code>cloud_disk.share_report</code>
     */
    public static final ShareReport SHARE_REPORT = new ShareReport();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ShareReportRecord> getRecordType() {
        return ShareReportRecord.class;
    }

    /**
     * The column <code>cloud_disk.share_report.id</code>.
     */
    public final TableField<ShareReportRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>cloud_disk.share_report.share_id</code>. 分享id
     */
    public final TableField<ShareReportRecord, Long> SHARE_ID = createField(DSL.name("share_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "分享id");

    /**
     * The column <code>cloud_disk.share_report.title</code>. 分享标题
     */
    public final TableField<ShareReportRecord, String> TITLE = createField(DSL.name("title"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "分享标题");

    /**
     * The column <code>cloud_disk.share_report.source_id</code>. 举报资源id
     */
    public final TableField<ShareReportRecord, Long> SOURCE_ID = createField(DSL.name("source_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "举报资源id");

    /**
     * The column <code>cloud_disk.share_report.file_id</code>. 举报文件id,文件夹则该处为0
     */
    public final TableField<ShareReportRecord, Long> FILE_ID = createField(DSL.name("file_id"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "举报文件id,文件夹则该处为0");

    /**
     * The column <code>cloud_disk.share_report.user_id</code>. 举报用户id
     */
    public final TableField<ShareReportRecord, Long> USER_ID = createField(DSL.name("user_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "举报用户id");

    /**
     * The column <code>cloud_disk.share_report.report_type</code>. 举报类型 (1-侵权,2-色情,3-暴力,4-政治,5-其他)
     */
    public final TableField<ShareReportRecord, Integer> REPORT_TYPE = createField(DSL.name("report_type"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "举报类型 (1-侵权,2-色情,3-暴力,4-政治,5-其他)");

    /**
     * The column <code>cloud_disk.share_report.reason</code>. 举报原因（其他）描述
     */
    public final TableField<ShareReportRecord, String> REASON = createField(DSL.name("reason"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "举报原因（其他）描述");

    /**
     * The column <code>cloud_disk.share_report.status</code>. 处理状态(0-未处理,1-已处理)
     */
    public final TableField<ShareReportRecord, Integer> STATUS = createField(DSL.name("status"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "处理状态(0-未处理,1-已处理)");

    /**
     * The column <code>cloud_disk.share_report.create_time</code>. 创建时间
     */
    public final TableField<ShareReportRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "创建时间");

    /**
     * The column <code>cloud_disk.share_report.modify_time</code>. 最后修改时间
     */
    public final TableField<ShareReportRecord, LocalDateTime> MODIFY_TIME = createField(DSL.name("modify_time"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "最后修改时间");

    /**
     * The column <code>cloud_disk.share_report.tenant_id</code>. 租户id
     */
    public final TableField<ShareReportRecord, Long> TENANT_ID = createField(DSL.name("tenant_id"), org.jooq.impl.SQLDataType.BIGINT, this, "租户id");

    /**
     * Create a <code>cloud_disk.share_report</code> table reference
     */
    public ShareReport() {
        this(DSL.name("share_report"), null);
    }

    /**
     * Create an aliased <code>cloud_disk.share_report</code> table reference
     */
    public ShareReport(String alias) {
        this(DSL.name(alias), SHARE_REPORT);
    }

    /**
     * Create an aliased <code>cloud_disk.share_report</code> table reference
     */
    public ShareReport(Name alias) {
        this(alias, SHARE_REPORT);
    }

    private ShareReport(Name alias, Table<ShareReportRecord> aliased) {
        this(alias, aliased, null);
    }

    private ShareReport(Name alias, Table<ShareReportRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("分享举报表"));
    }

    public <O extends Record> ShareReport(Table<O> child, ForeignKey<O, ShareReportRecord> key) {
        super(child, key, SHARE_REPORT);
    }

    @Override
    public Schema getSchema() {
        return CloudDisk.CLOUD_DISK;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SHARE_REPORT_PRIMARY);
    }

    @Override
    public Identity<ShareReportRecord, Long> getIdentity() {
        return Keys.IDENTITY_SHARE_REPORT;
    }

    @Override
    public UniqueKey<ShareReportRecord> getPrimaryKey() {
        return Keys.KEY_SHARE_REPORT_PRIMARY;
    }

    @Override
    public List<UniqueKey<ShareReportRecord>> getKeys() {
        return Arrays.<UniqueKey<ShareReportRecord>>asList(Keys.KEY_SHARE_REPORT_PRIMARY);
    }

    @Override
    public ShareReport as(String alias) {
        return new ShareReport(DSL.name(alias), this);
    }

    @Override
    public ShareReport as(Name alias) {
        return new ShareReport(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ShareReport rename(String name) {
        return new ShareReport(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ShareReport rename(Name name) {
        return new ShareReport(name, null);
    }

    // -------------------------------------------------------------------------
    // Row12 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row12<Long, Long, String, Long, Long, Long, Integer, String, Integer, LocalDateTime, LocalDateTime, Long> fieldsRow() {
        return (Row12) super.fieldsRow();
    }
}

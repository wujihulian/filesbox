/*
 * This file is generated by jOOQ.
 */
package com.svnlan.jooq.tables;


import com.svnlan.jooq.CloudDisk;
import com.svnlan.jooq.Indexes;
import com.svnlan.jooq.Keys;
import com.svnlan.jooq.tables.records.UserCommonInfoRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 用户资讯表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserCommonInfo extends TableImpl<UserCommonInfoRecord> {

    private static final long serialVersionUID = 1928627803;

    /**
     * The reference instance of <code>cloud_disk.user_common_info</code>
     */
    public static final UserCommonInfo USER_COMMON_INFO = new UserCommonInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserCommonInfoRecord> getRecordType() {
        return UserCommonInfoRecord.class;
    }

    /**
     * The column <code>cloud_disk.user_common_info.id</code>.
     */
    public final TableField<UserCommonInfoRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>cloud_disk.user_common_info.user_id</code>. 用户id
     */
    public final TableField<UserCommonInfoRecord, Long> USER_ID = createField(DSL.name("user_id"), org.jooq.impl.SQLDataType.BIGINT, this, "用户id");

    /**
     * The column <code>cloud_disk.user_common_info.info_id</code>. 资讯id
     */
    public final TableField<UserCommonInfoRecord, Long> INFO_ID = createField(DSL.name("info_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "资讯id");

    /**
     * The column <code>cloud_disk.user_common_info.ip</code>. 用户ip
     */
    public final TableField<UserCommonInfoRecord, String> IP = createField(DSL.name("ip"), org.jooq.impl.SQLDataType.VARCHAR(30), this, "用户ip");

    /**
     * The column <code>cloud_disk.user_common_info.view_count</code>. 阅读数
     */
    public final TableField<UserCommonInfoRecord, Integer> VIEW_COUNT = createField(DSL.name("view_count"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "阅读数");

    /**
     * The column <code>cloud_disk.user_common_info.is_like</code>. 是否点赞 0 否 1 是
     */
    public final TableField<UserCommonInfoRecord, Integer> IS_LIKE = createField(DSL.name("is_like"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "是否点赞 0 否 1 是");

    /**
     * The column <code>cloud_disk.user_common_info.create_time</code>. 创建时间
     */
    public final TableField<UserCommonInfoRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "创建时间");

    /**
     * The column <code>cloud_disk.user_common_info.modify_time</code>. 最后修改时间
     */
    public final TableField<UserCommonInfoRecord, LocalDateTime> MODIFY_TIME = createField(DSL.name("modify_time"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "最后修改时间");

    /**
     * The column <code>cloud_disk.user_common_info.tenant_id</code>. 租户id
     */
    public final TableField<UserCommonInfoRecord, Long> TENANT_ID = createField(DSL.name("tenant_id"), org.jooq.impl.SQLDataType.BIGINT, this, "租户id");

    /**
     * Create a <code>cloud_disk.user_common_info</code> table reference
     */
    public UserCommonInfo() {
        this(DSL.name("user_common_info"), null);
    }

    /**
     * Create an aliased <code>cloud_disk.user_common_info</code> table reference
     */
    public UserCommonInfo(String alias) {
        this(DSL.name(alias), USER_COMMON_INFO);
    }

    /**
     * Create an aliased <code>cloud_disk.user_common_info</code> table reference
     */
    public UserCommonInfo(Name alias) {
        this(alias, USER_COMMON_INFO);
    }

    private UserCommonInfo(Name alias, Table<UserCommonInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserCommonInfo(Name alias, Table<UserCommonInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("用户资讯表"));
    }

    public <O extends Record> UserCommonInfo(Table<O> child, ForeignKey<O, UserCommonInfoRecord> key) {
        super(child, key, USER_COMMON_INFO);
    }

    @Override
    public Schema getSchema() {
        return CloudDisk.CLOUD_DISK;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USER_COMMON_INFO_PRIMARY);
    }

    @Override
    public Identity<UserCommonInfoRecord, Long> getIdentity() {
        return Keys.IDENTITY_USER_COMMON_INFO;
    }

    @Override
    public UniqueKey<UserCommonInfoRecord> getPrimaryKey() {
        return Keys.KEY_USER_COMMON_INFO_PRIMARY;
    }

    @Override
    public List<UniqueKey<UserCommonInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<UserCommonInfoRecord>>asList(Keys.KEY_USER_COMMON_INFO_PRIMARY);
    }

    @Override
    public UserCommonInfo as(String alias) {
        return new UserCommonInfo(DSL.name(alias), this);
    }

    @Override
    public UserCommonInfo as(Name alias) {
        return new UserCommonInfo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserCommonInfo rename(String name) {
        return new UserCommonInfo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserCommonInfo rename(Name name) {
        return new UserCommonInfo(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, Long, Long, String, Integer, Integer, LocalDateTime, LocalDateTime, Long> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}

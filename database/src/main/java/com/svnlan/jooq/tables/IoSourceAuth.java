/*
 * This file is generated by jOOQ.
 */
package com.svnlan.jooq.tables;


import com.svnlan.jooq.CloudDisk;
import com.svnlan.jooq.Indexes;
import com.svnlan.jooq.Keys;
import com.svnlan.jooq.tables.records.IoSourceAuthRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 文档权限表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IoSourceAuth extends TableImpl<IoSourceAuthRecord> {

    private static final long serialVersionUID = 1723556904;

    /**
     * The reference instance of <code>cloud_disk.io_source_auth</code>
     */
    public static final IoSourceAuth IO_SOURCE_AUTH = new IoSourceAuth();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<IoSourceAuthRecord> getRecordType() {
        return IoSourceAuthRecord.class;
    }

    /**
     * The column <code>cloud_disk.io_source_auth.id</code>.
     */
    public final TableField<IoSourceAuthRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>cloud_disk.io_source_auth.source_id</code>. 文档资源id
     */
    public final TableField<IoSourceAuthRecord, Long> SOURCE_ID = createField(DSL.name("source_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "文档资源id");

    /**
     * The column <code>cloud_disk.io_source_auth.target_type</code>. 分享给的对象,1用户,2部门
     */
    public final TableField<IoSourceAuthRecord, Integer> TARGET_TYPE = createField(DSL.name("target_type"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "分享给的对象,1用户,2部门");

    /**
     * The column <code>cloud_disk.io_source_auth.target_id</code>. 所属对象id
     */
    public final TableField<IoSourceAuthRecord, Long> TARGET_ID = createField(DSL.name("target_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "所属对象id");

    /**
     * The column <code>cloud_disk.io_source_auth.auth_id</code>. 权限组id；自定义权限则为0
     */
    public final TableField<IoSourceAuthRecord, Integer> AUTH_ID = createField(DSL.name("auth_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "权限组id；自定义权限则为0");

    /**
     * The column <code>cloud_disk.io_source_auth.auth_define</code>. 自定义权限，4字节占位
     */
    public final TableField<IoSourceAuthRecord, Integer> AUTH_DEFINE = createField(DSL.name("auth_define"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "自定义权限，4字节占位");

    /**
     * The column <code>cloud_disk.io_source_auth.create_time</code>. 创建时间
     */
    public final TableField<IoSourceAuthRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "创建时间");

    /**
     * The column <code>cloud_disk.io_source_auth.modify_time</code>. 最后修改时间
     */
    public final TableField<IoSourceAuthRecord, LocalDateTime> MODIFY_TIME = createField(DSL.name("modify_time"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "最后修改时间");

    /**
     * The column <code>cloud_disk.io_source_auth.tenant_id</code>. 租户id
     */
    public final TableField<IoSourceAuthRecord, Long> TENANT_ID = createField(DSL.name("tenant_id"), org.jooq.impl.SQLDataType.BIGINT, this, "租户id");

    /**
     * Create a <code>cloud_disk.io_source_auth</code> table reference
     */
    public IoSourceAuth() {
        this(DSL.name("io_source_auth"), null);
    }

    /**
     * Create an aliased <code>cloud_disk.io_source_auth</code> table reference
     */
    public IoSourceAuth(String alias) {
        this(DSL.name(alias), IO_SOURCE_AUTH);
    }

    /**
     * Create an aliased <code>cloud_disk.io_source_auth</code> table reference
     */
    public IoSourceAuth(Name alias) {
        this(alias, IO_SOURCE_AUTH);
    }

    private IoSourceAuth(Name alias, Table<IoSourceAuthRecord> aliased) {
        this(alias, aliased, null);
    }

    private IoSourceAuth(Name alias, Table<IoSourceAuthRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("文档权限表"));
    }

    public <O extends Record> IoSourceAuth(Table<O> child, ForeignKey<O, IoSourceAuthRecord> key) {
        super(child, key, IO_SOURCE_AUTH);
    }

    @Override
    public Schema getSchema() {
        return CloudDisk.CLOUD_DISK;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.IO_SOURCE_AUTH_IO_SOURCE_AUTH_ID, Indexes.IO_SOURCE_AUTH_PRIMARY);
    }

    @Override
    public Identity<IoSourceAuthRecord, Long> getIdentity() {
        return Keys.IDENTITY_IO_SOURCE_AUTH;
    }

    @Override
    public UniqueKey<IoSourceAuthRecord> getPrimaryKey() {
        return Keys.KEY_IO_SOURCE_AUTH_PRIMARY;
    }

    @Override
    public List<UniqueKey<IoSourceAuthRecord>> getKeys() {
        return Arrays.<UniqueKey<IoSourceAuthRecord>>asList(Keys.KEY_IO_SOURCE_AUTH_PRIMARY);
    }

    @Override
    public IoSourceAuth as(String alias) {
        return new IoSourceAuth(DSL.name(alias), this);
    }

    @Override
    public IoSourceAuth as(Name alias) {
        return new IoSourceAuth(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public IoSourceAuth rename(String name) {
        return new IoSourceAuth(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public IoSourceAuth rename(Name name) {
        return new IoSourceAuth(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, Long, Integer, Long, Integer, Integer, LocalDateTime, LocalDateTime, Long> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}

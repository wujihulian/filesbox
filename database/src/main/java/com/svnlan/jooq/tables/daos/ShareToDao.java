/*
 * This file is generated by jOOQ.
 */
package com.svnlan.jooq.tables.daos;


import com.svnlan.jooq.tables.ShareTo;
import com.svnlan.jooq.tables.pojos.ShareToModel;
import com.svnlan.jooq.tables.records.ShareToRecord;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * 分享给指定用户(协作)
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ShareToDao extends DAOImpl<ShareToRecord, ShareToModel, Long> {

    /**
     * Create a new ShareToDao without any configuration
     */
    public ShareToDao() {
        super(ShareTo.SHARE_TO, ShareToModel.class);
    }

    /**
     * Create a new ShareToDao with an attached configuration
     */
    public ShareToDao(Configuration configuration) {
        super(ShareTo.SHARE_TO, ShareToModel.class, configuration);
    }

    @Override
    public Long getId(ShareToModel object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ShareToModel> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(ShareTo.SHARE_TO.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<ShareToModel> fetchById(Long... values) {
        return fetch(ShareTo.SHARE_TO.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public ShareToModel fetchOneById(Long value) {
        return fetchOne(ShareTo.SHARE_TO.ID, value);
    }

    /**
     * Fetch records that have <code>share_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ShareToModel> fetchRangeOfShareId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(ShareTo.SHARE_TO.SHARE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>share_id IN (values)</code>
     */
    public List<ShareToModel> fetchByShareId(Long... values) {
        return fetch(ShareTo.SHARE_TO.SHARE_ID, values);
    }

    /**
     * Fetch records that have <code>target_type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ShareToModel> fetchRangeOfTargetType(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(ShareTo.SHARE_TO.TARGET_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>target_type IN (values)</code>
     */
    public List<ShareToModel> fetchByTargetType(Integer... values) {
        return fetch(ShareTo.SHARE_TO.TARGET_TYPE, values);
    }

    /**
     * Fetch records that have <code>target_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ShareToModel> fetchRangeOfTargetId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(ShareTo.SHARE_TO.TARGET_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>target_id IN (values)</code>
     */
    public List<ShareToModel> fetchByTargetId(Long... values) {
        return fetch(ShareTo.SHARE_TO.TARGET_ID, values);
    }

    /**
     * Fetch records that have <code>auth_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ShareToModel> fetchRangeOfAuthId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(ShareTo.SHARE_TO.AUTH_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>auth_id IN (values)</code>
     */
    public List<ShareToModel> fetchByAuthId(Integer... values) {
        return fetch(ShareTo.SHARE_TO.AUTH_ID, values);
    }

    /**
     * Fetch records that have <code>auth_define BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ShareToModel> fetchRangeOfAuthDefine(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(ShareTo.SHARE_TO.AUTH_DEFINE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>auth_define IN (values)</code>
     */
    public List<ShareToModel> fetchByAuthDefine(Integer... values) {
        return fetch(ShareTo.SHARE_TO.AUTH_DEFINE, values);
    }

    /**
     * Fetch records that have <code>create_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ShareToModel> fetchRangeOfCreateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(ShareTo.SHARE_TO.CREATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<ShareToModel> fetchByCreateTime(LocalDateTime... values) {
        return fetch(ShareTo.SHARE_TO.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>modify_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ShareToModel> fetchRangeOfModifyTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(ShareTo.SHARE_TO.MODIFY_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>modify_time IN (values)</code>
     */
    public List<ShareToModel> fetchByModifyTime(LocalDateTime... values) {
        return fetch(ShareTo.SHARE_TO.MODIFY_TIME, values);
    }

    /**
     * Fetch records that have <code>tenant_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ShareToModel> fetchRangeOfTenantId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(ShareTo.SHARE_TO.TENANT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tenant_id IN (values)</code>
     */
    public List<ShareToModel> fetchByTenantId(Long... values) {
        return fetch(ShareTo.SHARE_TO.TENANT_ID, values);
    }
}

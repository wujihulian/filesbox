/*
 * This file is generated by jOOQ.
 */
package com.svnlan.jooq.tables.daos;


import com.svnlan.jooq.tables.VisitCountRecord;
import com.svnlan.jooq.tables.pojos.VisitCountRecordModel;
import com.svnlan.jooq.tables.records.VisitCountRecordRecord;

import java.time.LocalDateTime;
import java.util.Date;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * 访问次数记录表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VisitCountRecordDao extends DAOImpl<VisitCountRecordRecord, VisitCountRecordModel, Long> {

    /**
     * Create a new VisitCountRecordDao without any configuration
     */
    public VisitCountRecordDao() {
        super(VisitCountRecord.VISIT_COUNT_RECORD, VisitCountRecordModel.class);
    }

    /**
     * Create a new VisitCountRecordDao with an attached configuration
     */
    public VisitCountRecordDao(Configuration configuration) {
        super(VisitCountRecord.VISIT_COUNT_RECORD, VisitCountRecordModel.class, configuration);
    }

    @Override
    public Long getId(VisitCountRecordModel object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<VisitCountRecordModel> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(VisitCountRecord.VISIT_COUNT_RECORD.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<VisitCountRecordModel> fetchById(Long... values) {
        return fetch(VisitCountRecord.VISIT_COUNT_RECORD.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public VisitCountRecordModel fetchOneById(Long value) {
        return fetchOne(VisitCountRecord.VISIT_COUNT_RECORD.ID, value);
    }

    /**
     * Fetch records that have <code>visit_count BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<VisitCountRecordModel> fetchRangeOfVisitCount(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(VisitCountRecord.VISIT_COUNT_RECORD.VISIT_COUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>visit_count IN (values)</code>
     */
    public List<VisitCountRecordModel> fetchByVisitCount(Long... values) {
        return fetch(VisitCountRecord.VISIT_COUNT_RECORD.VISIT_COUNT, values);
    }

    /**
     * Fetch records that have <code>device_type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<VisitCountRecordModel> fetchRangeOfDeviceType(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(VisitCountRecord.VISIT_COUNT_RECORD.DEVICE_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>device_type IN (values)</code>
     */
    public List<VisitCountRecordModel> fetchByDeviceType(Integer... values) {
        return fetch(VisitCountRecord.VISIT_COUNT_RECORD.DEVICE_TYPE, values);
    }

    /**
     * Fetch records that have <code>os_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<VisitCountRecordModel> fetchRangeOfOsName(String lowerInclusive, String upperInclusive) {
        return fetchRange(VisitCountRecord.VISIT_COUNT_RECORD.OS_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>os_name IN (values)</code>
     */
    public List<VisitCountRecordModel> fetchByOsName(String... values) {
        return fetch(VisitCountRecord.VISIT_COUNT_RECORD.OS_NAME, values);
    }

    /**
     * Fetch records that have <code>type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<VisitCountRecordModel> fetchRangeOfType(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(VisitCountRecord.VISIT_COUNT_RECORD.TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>type IN (values)</code>
     */
    public List<VisitCountRecordModel> fetchByType(Integer... values) {
        return fetch(VisitCountRecord.VISIT_COUNT_RECORD.TYPE, values);
    }

    /**
     * Fetch records that have <code>visit_day BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<VisitCountRecordModel> fetchRangeOfVisitDay(Date lowerInclusive, Date upperInclusive) {
        return fetchRange(VisitCountRecord.VISIT_COUNT_RECORD.VISIT_DAY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>visit_day IN (values)</code>
     */
    public List<VisitCountRecordModel> fetchByVisitDay(Date... values) {
        return fetch(VisitCountRecord.VISIT_COUNT_RECORD.VISIT_DAY, values);
    }

    /**
     * Fetch records that have <code>modify_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<VisitCountRecordModel> fetchRangeOfModifyTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(VisitCountRecord.VISIT_COUNT_RECORD.MODIFY_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>modify_time IN (values)</code>
     */
    public List<VisitCountRecordModel> fetchByModifyTime(LocalDateTime... values) {
        return fetch(VisitCountRecord.VISIT_COUNT_RECORD.MODIFY_TIME, values);
    }

    /**
     * Fetch records that have <code>create_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<VisitCountRecordModel> fetchRangeOfCreateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(VisitCountRecord.VISIT_COUNT_RECORD.CREATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<VisitCountRecordModel> fetchByCreateTime(LocalDateTime... values) {
        return fetch(VisitCountRecord.VISIT_COUNT_RECORD.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>tenant_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<VisitCountRecordModel> fetchRangeOfTenantId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(VisitCountRecord.VISIT_COUNT_RECORD.TENANT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tenant_id IN (values)</code>
     */
    public List<VisitCountRecordModel> fetchByTenantId(Long... values) {
        return fetch(VisitCountRecord.VISIT_COUNT_RECORD.TENANT_ID, values);
    }
}

/*
 * This file is generated by jOOQ.
 */
package com.svnlan.jooq.tables.records;


import com.svnlan.jooq.tables.CommonConvert;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.TableRecordImpl;


/**
 * 转码表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CommonConvertRecord extends TableRecordImpl<CommonConvertRecord> implements Record13<Long, Long, Long, Long, String, Integer, String, String, Integer, LocalDateTime, LocalDateTime, LocalDateTime, Long> {

    private static final long serialVersionUID = -179269543;

    /**
     * Setter for <code>cloud_disk.common_convert.id</code>. 转码主键
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>cloud_disk.common_convert.id</code>. 转码主键
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>cloud_disk.common_convert.source_id</code>. 对应存储资源id
     */
    public void setSourceId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>cloud_disk.common_convert.source_id</code>. 对应存储资源id
     */
    public Long getSourceId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>cloud_disk.common_convert.file_id</code>. 对应存储资源fileID
     */
    public void setFileId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>cloud_disk.common_convert.file_id</code>. 对应存储资源fileID
     */
    public Long getFileId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>cloud_disk.common_convert.user_id</code>. 执行人ID
     */
    public void setUserId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>cloud_disk.common_convert.user_id</code>. 执行人ID
     */
    public Long getUserId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>cloud_disk.common_convert.name</code>. 文件名
     */
    public void setName(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>cloud_disk.common_convert.name</code>. 文件名
     */
    public String getName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>cloud_disk.common_convert.frequency_count</code>. 执行次数
     */
    public void setFrequencyCount(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>cloud_disk.common_convert.frequency_count</code>. 执行次数
     */
    public Integer getFrequencyCount() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>cloud_disk.common_convert.state</code>. 状态，0开始，1执行成功，2执行失败
     */
    public void setState(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>cloud_disk.common_convert.state</code>. 状态，0开始，1执行成功，2执行失败
     */
    public String getState() {
        return (String) get(6);
    }

    /**
     * Setter for <code>cloud_disk.common_convert.remark</code>. 备注，如有执行异常，记录异常信息
     */
    public void setRemark(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>cloud_disk.common_convert.remark</code>. 备注，如有执行异常，记录异常信息
     */
    public String getRemark() {
        return (String) get(7);
    }

    /**
     * Setter for <code>cloud_disk.common_convert.schedule_frequency_count</code>. 自动执行次数
     */
    public void setScheduleFrequencyCount(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>cloud_disk.common_convert.schedule_frequency_count</code>. 自动执行次数
     */
    public Integer getScheduleFrequencyCount() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>cloud_disk.common_convert.modify_time</code>. 最后修改时间
     */
    public void setModifyTime(LocalDateTime value) {
        set(9, value);
    }

    /**
     * Getter for <code>cloud_disk.common_convert.modify_time</code>. 最后修改时间
     */
    public LocalDateTime getModifyTime() {
        return (LocalDateTime) get(9);
    }

    /**
     * Setter for <code>cloud_disk.common_convert.create_time</code>. 创建时间
     */
    public void setCreateTime(LocalDateTime value) {
        set(10, value);
    }

    /**
     * Getter for <code>cloud_disk.common_convert.create_time</code>. 创建时间
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(10);
    }

    /**
     * Setter for <code>cloud_disk.common_convert.schedule_time</code>. 定时任务执行修改时间
     */
    public void setScheduleTime(LocalDateTime value) {
        set(11, value);
    }

    /**
     * Getter for <code>cloud_disk.common_convert.schedule_time</code>. 定时任务执行修改时间
     */
    public LocalDateTime getScheduleTime() {
        return (LocalDateTime) get(11);
    }

    /**
     * Setter for <code>cloud_disk.common_convert.tenant_id</code>. 租户id
     */
    public void setTenantId(Long value) {
        set(12, value);
    }

    /**
     * Getter for <code>cloud_disk.common_convert.tenant_id</code>. 租户id
     */
    public Long getTenantId() {
        return (Long) get(12);
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row13<Long, Long, Long, Long, String, Integer, String, String, Integer, LocalDateTime, LocalDateTime, LocalDateTime, Long> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    @Override
    public Row13<Long, Long, Long, Long, String, Integer, String, String, Integer, LocalDateTime, LocalDateTime, LocalDateTime, Long> valuesRow() {
        return (Row13) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return CommonConvert.COMMON_CONVERT.ID;
    }

    @Override
    public Field<Long> field2() {
        return CommonConvert.COMMON_CONVERT.SOURCE_ID;
    }

    @Override
    public Field<Long> field3() {
        return CommonConvert.COMMON_CONVERT.FILE_ID;
    }

    @Override
    public Field<Long> field4() {
        return CommonConvert.COMMON_CONVERT.USER_ID;
    }

    @Override
    public Field<String> field5() {
        return CommonConvert.COMMON_CONVERT.NAME;
    }

    @Override
    public Field<Integer> field6() {
        return CommonConvert.COMMON_CONVERT.FREQUENCY_COUNT;
    }

    @Override
    public Field<String> field7() {
        return CommonConvert.COMMON_CONVERT.STATE;
    }

    @Override
    public Field<String> field8() {
        return CommonConvert.COMMON_CONVERT.REMARK;
    }

    @Override
    public Field<Integer> field9() {
        return CommonConvert.COMMON_CONVERT.SCHEDULE_FREQUENCY_COUNT;
    }

    @Override
    public Field<LocalDateTime> field10() {
        return CommonConvert.COMMON_CONVERT.MODIFY_TIME;
    }

    @Override
    public Field<LocalDateTime> field11() {
        return CommonConvert.COMMON_CONVERT.CREATE_TIME;
    }

    @Override
    public Field<LocalDateTime> field12() {
        return CommonConvert.COMMON_CONVERT.SCHEDULE_TIME;
    }

    @Override
    public Field<Long> field13() {
        return CommonConvert.COMMON_CONVERT.TENANT_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getSourceId();
    }

    @Override
    public Long component3() {
        return getFileId();
    }

    @Override
    public Long component4() {
        return getUserId();
    }

    @Override
    public String component5() {
        return getName();
    }

    @Override
    public Integer component6() {
        return getFrequencyCount();
    }

    @Override
    public String component7() {
        return getState();
    }

    @Override
    public String component8() {
        return getRemark();
    }

    @Override
    public Integer component9() {
        return getScheduleFrequencyCount();
    }

    @Override
    public LocalDateTime component10() {
        return getModifyTime();
    }

    @Override
    public LocalDateTime component11() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime component12() {
        return getScheduleTime();
    }

    @Override
    public Long component13() {
        return getTenantId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getSourceId();
    }

    @Override
    public Long value3() {
        return getFileId();
    }

    @Override
    public Long value4() {
        return getUserId();
    }

    @Override
    public String value5() {
        return getName();
    }

    @Override
    public Integer value6() {
        return getFrequencyCount();
    }

    @Override
    public String value7() {
        return getState();
    }

    @Override
    public String value8() {
        return getRemark();
    }

    @Override
    public Integer value9() {
        return getScheduleFrequencyCount();
    }

    @Override
    public LocalDateTime value10() {
        return getModifyTime();
    }

    @Override
    public LocalDateTime value11() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime value12() {
        return getScheduleTime();
    }

    @Override
    public Long value13() {
        return getTenantId();
    }

    @Override
    public CommonConvertRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public CommonConvertRecord value2(Long value) {
        setSourceId(value);
        return this;
    }

    @Override
    public CommonConvertRecord value3(Long value) {
        setFileId(value);
        return this;
    }

    @Override
    public CommonConvertRecord value4(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public CommonConvertRecord value5(String value) {
        setName(value);
        return this;
    }

    @Override
    public CommonConvertRecord value6(Integer value) {
        setFrequencyCount(value);
        return this;
    }

    @Override
    public CommonConvertRecord value7(String value) {
        setState(value);
        return this;
    }

    @Override
    public CommonConvertRecord value8(String value) {
        setRemark(value);
        return this;
    }

    @Override
    public CommonConvertRecord value9(Integer value) {
        setScheduleFrequencyCount(value);
        return this;
    }

    @Override
    public CommonConvertRecord value10(LocalDateTime value) {
        setModifyTime(value);
        return this;
    }

    @Override
    public CommonConvertRecord value11(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public CommonConvertRecord value12(LocalDateTime value) {
        setScheduleTime(value);
        return this;
    }

    @Override
    public CommonConvertRecord value13(Long value) {
        setTenantId(value);
        return this;
    }

    @Override
    public CommonConvertRecord values(Long value1, Long value2, Long value3, Long value4, String value5, Integer value6, String value7, String value8, Integer value9, LocalDateTime value10, LocalDateTime value11, LocalDateTime value12, Long value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CommonConvertRecord
     */
    public CommonConvertRecord() {
        super(CommonConvert.COMMON_CONVERT);
    }

    /**
     * Create a detached, initialised CommonConvertRecord
     */
    public CommonConvertRecord(Long id, Long sourceId, Long fileId, Long userId, String name, Integer frequencyCount, String state, String remark, Integer scheduleFrequencyCount, LocalDateTime modifyTime, LocalDateTime createTime, LocalDateTime scheduleTime, Long tenantId) {
        super(CommonConvert.COMMON_CONVERT);

        set(0, id);
        set(1, sourceId);
        set(2, fileId);
        set(3, userId);
        set(4, name);
        set(5, frequencyCount);
        set(6, state);
        set(7, remark);
        set(8, scheduleFrequencyCount);
        set(9, modifyTime);
        set(10, createTime);
        set(11, scheduleTime);
        set(12, tenantId);
    }
}

/*
 * This file is generated by jOOQ.
 */
package com.svnlan.jooq.tables.daos;


import com.svnlan.jooq.tables.NoticeUser;
import com.svnlan.jooq.tables.pojos.NoticeUserModel;
import com.svnlan.jooq.tables.records.NoticeUserRecord;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * 通知用户关联表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NoticeUserDao extends DAOImpl<NoticeUserRecord, NoticeUserModel, Long> {

    /**
     * Create a new NoticeUserDao without any configuration
     */
    public NoticeUserDao() {
        super(NoticeUser.NOTICE_USER, NoticeUserModel.class);
    }

    /**
     * Create a new NoticeUserDao with an attached configuration
     */
    public NoticeUserDao(Configuration configuration) {
        super(NoticeUser.NOTICE_USER, NoticeUserModel.class, configuration);
    }

    @Override
    public Long getId(NoticeUserModel object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<NoticeUserModel> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(NoticeUser.NOTICE_USER.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<NoticeUserModel> fetchById(Long... values) {
        return fetch(NoticeUser.NOTICE_USER.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public NoticeUserModel fetchOneById(Long value) {
        return fetchOne(NoticeUser.NOTICE_USER.ID, value);
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<NoticeUserModel> fetchRangeOfUserId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(NoticeUser.NOTICE_USER.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<NoticeUserModel> fetchByUserId(Long... values) {
        return fetch(NoticeUser.NOTICE_USER.USER_ID, values);
    }

    /**
     * Fetch records that have <code>notice_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<NoticeUserModel> fetchRangeOfNoticeId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(NoticeUser.NOTICE_USER.NOTICE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>notice_id IN (values)</code>
     */
    public List<NoticeUserModel> fetchByNoticeId(Long... values) {
        return fetch(NoticeUser.NOTICE_USER.NOTICE_ID, values);
    }

    /**
     * Fetch records that have <code>is_read BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<NoticeUserModel> fetchRangeOfIsRead(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(NoticeUser.NOTICE_USER.IS_READ, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>is_read IN (values)</code>
     */
    public List<NoticeUserModel> fetchByIsRead(Integer... values) {
        return fetch(NoticeUser.NOTICE_USER.IS_READ, values);
    }

    /**
     * Fetch records that have <code>create_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<NoticeUserModel> fetchRangeOfCreateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(NoticeUser.NOTICE_USER.CREATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<NoticeUserModel> fetchByCreateTime(LocalDateTime... values) {
        return fetch(NoticeUser.NOTICE_USER.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>modify_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<NoticeUserModel> fetchRangeOfModifyTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(NoticeUser.NOTICE_USER.MODIFY_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>modify_time IN (values)</code>
     */
    public List<NoticeUserModel> fetchByModifyTime(LocalDateTime... values) {
        return fetch(NoticeUser.NOTICE_USER.MODIFY_TIME, values);
    }

    /**
     * Fetch records that have <code>tenant_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<NoticeUserModel> fetchRangeOfTenantId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(NoticeUser.NOTICE_USER.TENANT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tenant_id IN (values)</code>
     */
    public List<NoticeUserModel> fetchByTenantId(Long... values) {
        return fetch(NoticeUser.NOTICE_USER.TENANT_ID, values);
    }
}

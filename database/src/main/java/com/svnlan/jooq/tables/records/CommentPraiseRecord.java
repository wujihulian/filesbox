/*
 * This file is generated by jOOQ.
 */
package com.svnlan.jooq.tables.records;


import com.svnlan.jooq.tables.CommentPraise;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 评论点赞表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CommentPraiseRecord extends UpdatableRecordImpl<CommentPraiseRecord> implements Record6<Long, Long, Long, LocalDateTime, LocalDateTime, Long> {

    private static final long serialVersionUID = -1197425513;

    /**
     * Setter for <code>cloud_disk.comment_praise.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>cloud_disk.comment_praise.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>cloud_disk.comment_praise.comment_id</code>. 评论ID
     */
    public void setCommentId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>cloud_disk.comment_praise.comment_id</code>. 评论ID
     */
    public Long getCommentId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>cloud_disk.comment_praise.user_id</code>. 用户ID
     */
    public void setUserId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>cloud_disk.comment_praise.user_id</code>. 用户ID
     */
    public Long getUserId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>cloud_disk.comment_praise.create_time</code>. 创建时间
     */
    public void setCreateTime(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>cloud_disk.comment_praise.create_time</code>. 创建时间
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>cloud_disk.comment_praise.modify_time</code>. 修改时间
     */
    public void setModifyTime(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>cloud_disk.comment_praise.modify_time</code>. 修改时间
     */
    public LocalDateTime getModifyTime() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>cloud_disk.comment_praise.tenant_id</code>. 租户id
     */
    public void setTenantId(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>cloud_disk.comment_praise.tenant_id</code>. 租户id
     */
    public Long getTenantId() {
        return (Long) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, Long, Long, LocalDateTime, LocalDateTime, Long> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, Long, Long, LocalDateTime, LocalDateTime, Long> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return CommentPraise.COMMENT_PRAISE.ID;
    }

    @Override
    public Field<Long> field2() {
        return CommentPraise.COMMENT_PRAISE.COMMENT_ID;
    }

    @Override
    public Field<Long> field3() {
        return CommentPraise.COMMENT_PRAISE.USER_ID;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return CommentPraise.COMMENT_PRAISE.CREATE_TIME;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return CommentPraise.COMMENT_PRAISE.MODIFY_TIME;
    }

    @Override
    public Field<Long> field6() {
        return CommentPraise.COMMENT_PRAISE.TENANT_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getCommentId();
    }

    @Override
    public Long component3() {
        return getUserId();
    }

    @Override
    public LocalDateTime component4() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime component5() {
        return getModifyTime();
    }

    @Override
    public Long component6() {
        return getTenantId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getCommentId();
    }

    @Override
    public Long value3() {
        return getUserId();
    }

    @Override
    public LocalDateTime value4() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime value5() {
        return getModifyTime();
    }

    @Override
    public Long value6() {
        return getTenantId();
    }

    @Override
    public CommentPraiseRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public CommentPraiseRecord value2(Long value) {
        setCommentId(value);
        return this;
    }

    @Override
    public CommentPraiseRecord value3(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public CommentPraiseRecord value4(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public CommentPraiseRecord value5(LocalDateTime value) {
        setModifyTime(value);
        return this;
    }

    @Override
    public CommentPraiseRecord value6(Long value) {
        setTenantId(value);
        return this;
    }

    @Override
    public CommentPraiseRecord values(Long value1, Long value2, Long value3, LocalDateTime value4, LocalDateTime value5, Long value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CommentPraiseRecord
     */
    public CommentPraiseRecord() {
        super(CommentPraise.COMMENT_PRAISE);
    }

    /**
     * Create a detached, initialised CommentPraiseRecord
     */
    public CommentPraiseRecord(Long id, Long commentId, Long userId, LocalDateTime createTime, LocalDateTime modifyTime, Long tenantId) {
        super(CommentPraise.COMMENT_PRAISE);

        set(0, id);
        set(1, commentId);
        set(2, userId);
        set(3, createTime);
        set(4, modifyTime);
        set(5, tenantId);
    }
}

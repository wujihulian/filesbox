/*
 * This file is generated by jOOQ.
 */
package com.svnlan.jooq.tables.records;


import com.svnlan.jooq.tables.UserOption;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 用户数据配置表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserOptionRecord extends UpdatableRecordImpl<UserOptionRecord> implements Record8<Long, Long, String, String, String, LocalDateTime, LocalDateTime, Long> {

    private static final long serialVersionUID = 832252219;

    /**
     * Setter for <code>cloud_disk.user_option.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>cloud_disk.user_option.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>cloud_disk.user_option.user_id</code>. 用户id
     */
    public void setUserId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>cloud_disk.user_option.user_id</code>. 用户id
     */
    public Long getUserId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>cloud_disk.user_option.type</code>. 配置类型,全局配置类型为空,编辑器配置type=editor
     */
    public void setType(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>cloud_disk.user_option.type</code>. 配置类型,全局配置类型为空,编辑器配置type=editor
     */
    public String getType() {
        return (String) get(2);
    }

    /**
     * Setter for <code>cloud_disk.user_option.key_string</code>. 配置key
     */
    public void setKeyString(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>cloud_disk.user_option.key_string</code>. 配置key
     */
    public String getKeyString() {
        return (String) get(3);
    }

    /**
     * Setter for <code>cloud_disk.user_option.value_text</code>. 配置值
     */
    public void setValueText(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>cloud_disk.user_option.value_text</code>. 配置值
     */
    public String getValueText() {
        return (String) get(4);
    }

    /**
     * Setter for <code>cloud_disk.user_option.create_time</code>. 创建时间
     */
    public void setCreateTime(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>cloud_disk.user_option.create_time</code>. 创建时间
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>cloud_disk.user_option.modify_time</code>. 最后修改时间
     */
    public void setModifyTime(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>cloud_disk.user_option.modify_time</code>. 最后修改时间
     */
    public LocalDateTime getModifyTime() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>cloud_disk.user_option.tenant_id</code>. 租户id
     */
    public void setTenantId(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>cloud_disk.user_option.tenant_id</code>. 租户id
     */
    public Long getTenantId() {
        return (Long) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, Long, String, String, String, LocalDateTime, LocalDateTime, Long> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, Long, String, String, String, LocalDateTime, LocalDateTime, Long> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return UserOption.USER_OPTION.ID;
    }

    @Override
    public Field<Long> field2() {
        return UserOption.USER_OPTION.USER_ID;
    }

    @Override
    public Field<String> field3() {
        return UserOption.USER_OPTION.TYPE;
    }

    @Override
    public Field<String> field4() {
        return UserOption.USER_OPTION.KEY_STRING;
    }

    @Override
    public Field<String> field5() {
        return UserOption.USER_OPTION.VALUE_TEXT;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return UserOption.USER_OPTION.CREATE_TIME;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return UserOption.USER_OPTION.MODIFY_TIME;
    }

    @Override
    public Field<Long> field8() {
        return UserOption.USER_OPTION.TENANT_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getUserId();
    }

    @Override
    public String component3() {
        return getType();
    }

    @Override
    public String component4() {
        return getKeyString();
    }

    @Override
    public String component5() {
        return getValueText();
    }

    @Override
    public LocalDateTime component6() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime component7() {
        return getModifyTime();
    }

    @Override
    public Long component8() {
        return getTenantId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getUserId();
    }

    @Override
    public String value3() {
        return getType();
    }

    @Override
    public String value4() {
        return getKeyString();
    }

    @Override
    public String value5() {
        return getValueText();
    }

    @Override
    public LocalDateTime value6() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime value7() {
        return getModifyTime();
    }

    @Override
    public Long value8() {
        return getTenantId();
    }

    @Override
    public UserOptionRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public UserOptionRecord value2(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public UserOptionRecord value3(String value) {
        setType(value);
        return this;
    }

    @Override
    public UserOptionRecord value4(String value) {
        setKeyString(value);
        return this;
    }

    @Override
    public UserOptionRecord value5(String value) {
        setValueText(value);
        return this;
    }

    @Override
    public UserOptionRecord value6(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public UserOptionRecord value7(LocalDateTime value) {
        setModifyTime(value);
        return this;
    }

    @Override
    public UserOptionRecord value8(Long value) {
        setTenantId(value);
        return this;
    }

    @Override
    public UserOptionRecord values(Long value1, Long value2, String value3, String value4, String value5, LocalDateTime value6, LocalDateTime value7, Long value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserOptionRecord
     */
    public UserOptionRecord() {
        super(UserOption.USER_OPTION);
    }

    /**
     * Create a detached, initialised UserOptionRecord
     */
    public UserOptionRecord(Long id, Long userId, String type, String keyString, String valueText, LocalDateTime createTime, LocalDateTime modifyTime, Long tenantId) {
        super(UserOption.USER_OPTION);

        set(0, id);
        set(1, userId);
        set(2, type);
        set(3, keyString);
        set(4, valueText);
        set(5, createTime);
        set(6, modifyTime);
        set(7, tenantId);
    }
}

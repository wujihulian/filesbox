/*
 * This file is generated by jOOQ.
 */
package com.svnlan.jooq.tables.daos;


import com.svnlan.jooq.tables.TTenant;
import com.svnlan.jooq.tables.pojos.TTenantModel;
import com.svnlan.jooq.tables.records.TTenantRecord;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * 租户表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TTenantDao extends DAOImpl<TTenantRecord, TTenantModel, Long> {

    /**
     * Create a new TTenantDao without any configuration
     */
    public TTenantDao() {
        super(TTenant.T_TENANT, TTenantModel.class);
    }

    /**
     * Create a new TTenantDao with an attached configuration
     */
    public TTenantDao(Configuration configuration) {
        super(TTenant.T_TENANT, TTenantModel.class, configuration);
    }

    @Override
    public Long getId(TTenantModel object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<TTenantModel> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(TTenant.T_TENANT.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<TTenantModel> fetchById(Long... values) {
        return fetch(TTenant.T_TENANT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public TTenantModel fetchOneById(Long value) {
        return fetchOne(TTenant.T_TENANT.ID, value);
    }

    /**
     * Fetch records that have <code>tenant_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<TTenantModel> fetchRangeOfTenantName(String lowerInclusive, String upperInclusive) {
        return fetchRange(TTenant.T_TENANT.TENANT_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tenant_name IN (values)</code>
     */
    public List<TTenantModel> fetchByTenantName(String... values) {
        return fetch(TTenant.T_TENANT.TENANT_NAME, values);
    }

    /**
     * Fetch records that have <code>second_level_domain BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<TTenantModel> fetchRangeOfSecondLevelDomain(String lowerInclusive, String upperInclusive) {
        return fetchRange(TTenant.T_TENANT.SECOND_LEVEL_DOMAIN, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>second_level_domain IN (values)</code>
     */
    public List<TTenantModel> fetchBySecondLevelDomain(String... values) {
        return fetch(TTenant.T_TENANT.SECOND_LEVEL_DOMAIN, values);
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<TTenantModel> fetchRangeOfUserId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(TTenant.T_TENANT.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<TTenantModel> fetchByUserId(Long... values) {
        return fetch(TTenant.T_TENANT.USER_ID, values);
    }

    /**
     * Fetch records that have <code>status BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<TTenantModel> fetchRangeOfStatus(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(TTenant.T_TENANT.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<TTenantModel> fetchByStatus(Integer... values) {
        return fetch(TTenant.T_TENANT.STATUS, values);
    }

    /**
     * Fetch records that have <code>start_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<TTenantModel> fetchRangeOfStartTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(TTenant.T_TENANT.START_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>start_time IN (values)</code>
     */
    public List<TTenantModel> fetchByStartTime(LocalDateTime... values) {
        return fetch(TTenant.T_TENANT.START_TIME, values);
    }

    /**
     * Fetch records that have <code>expire_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<TTenantModel> fetchRangeOfExpireTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(TTenant.T_TENANT.EXPIRE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>expire_time IN (values)</code>
     */
    public List<TTenantModel> fetchByExpireTime(LocalDateTime... values) {
        return fetch(TTenant.T_TENANT.EXPIRE_TIME, values);
    }

    /**
     * Fetch records that have <code>size_use BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<TTenantModel> fetchRangeOfSizeUse(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(TTenant.T_TENANT.SIZE_USE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>size_use IN (values)</code>
     */
    public List<TTenantModel> fetchBySizeUse(Long... values) {
        return fetch(TTenant.T_TENANT.SIZE_USE, values);
    }

    /**
     * Fetch records that have <code>group_count BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<TTenantModel> fetchRangeOfGroupCount(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(TTenant.T_TENANT.GROUP_COUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>group_count IN (values)</code>
     */
    public List<TTenantModel> fetchByGroupCount(Long... values) {
        return fetch(TTenant.T_TENANT.GROUP_COUNT, values);
    }

    /**
     * Fetch records that have <code>user_count BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<TTenantModel> fetchRangeOfUserCount(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(TTenant.T_TENANT.USER_COUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_count IN (values)</code>
     */
    public List<TTenantModel> fetchByUserCount(Long... values) {
        return fetch(TTenant.T_TENANT.USER_COUNT, values);
    }

    /**
     * Fetch records that have <code>remark BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<TTenantModel> fetchRangeOfRemark(String lowerInclusive, String upperInclusive) {
        return fetchRange(TTenant.T_TENANT.REMARK, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>remark IN (values)</code>
     */
    public List<TTenantModel> fetchByRemark(String... values) {
        return fetch(TTenant.T_TENANT.REMARK, values);
    }

    /**
     * Fetch records that have <code>create_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<TTenantModel> fetchRangeOfCreateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(TTenant.T_TENANT.CREATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<TTenantModel> fetchByCreateTime(LocalDateTime... values) {
        return fetch(TTenant.T_TENANT.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>modify_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<TTenantModel> fetchRangeOfModifyTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(TTenant.T_TENANT.MODIFY_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>modify_time IN (values)</code>
     */
    public List<TTenantModel> fetchByModifyTime(LocalDateTime... values) {
        return fetch(TTenant.T_TENANT.MODIFY_TIME, values);
    }

    /**
     * Fetch records that have <code>dr BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<TTenantModel> fetchRangeOfDr(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(TTenant.T_TENANT.DR, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>dr IN (values)</code>
     */
    public List<TTenantModel> fetchByDr(Integer... values) {
        return fetch(TTenant.T_TENANT.DR, values);
    }

    /**
     * Fetch records that have <code>is_system BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<TTenantModel> fetchRangeOfIsSystem(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(TTenant.T_TENANT.IS_SYSTEM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>is_system IN (values)</code>
     */
    public List<TTenantModel> fetchByIsSystem(Integer... values) {
        return fetch(TTenant.T_TENANT.IS_SYSTEM, values);
    }
}

/*
 * This file is generated by jOOQ.
 */
package com.svnlan.jooq.tables.records;


import com.svnlan.jooq.tables.LogSchedule;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 任务执行记录表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LogScheduleRecord extends UpdatableRecordImpl<LogScheduleRecord> implements Record7<Long, String, LocalDateTime, LocalDateTime, String, String, Long> {

    private static final long serialVersionUID = 384290439;

    /**
     * Setter for <code>cloud_disk.log_schedule.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>cloud_disk.log_schedule.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>cloud_disk.log_schedule.common_schedule_id</code>. 定时任务标识
     */
    public void setCommonScheduleId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>cloud_disk.log_schedule.common_schedule_id</code>. 定时任务标识
     */
    public String getCommonScheduleId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>cloud_disk.log_schedule.gmt_start</code>. 任务执行开始时间
     */
    public void setGmtStart(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>cloud_disk.log_schedule.gmt_start</code>. 任务执行开始时间
     */
    public LocalDateTime getGmtStart() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>cloud_disk.log_schedule.gmt_end</code>. 任务执行结束时间
     */
    public void setGmtEnd(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>cloud_disk.log_schedule.gmt_end</code>. 任务执行结束时间
     */
    public LocalDateTime getGmtEnd() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>cloud_disk.log_schedule.state</code>. 状态，0开始，1执行成功，2执行失败
     */
    public void setState(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>cloud_disk.log_schedule.state</code>. 状态，0开始，1执行成功，2执行失败
     */
    public String getState() {
        return (String) get(4);
    }

    /**
     * Setter for <code>cloud_disk.log_schedule.remark</code>. 备注，如有执行异常，记录异常信息
     */
    public void setRemark(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>cloud_disk.log_schedule.remark</code>. 备注，如有执行异常，记录异常信息
     */
    public String getRemark() {
        return (String) get(5);
    }

    /**
     * Setter for <code>cloud_disk.log_schedule.tenant_id</code>. 租户id
     */
    public void setTenantId(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>cloud_disk.log_schedule.tenant_id</code>. 租户id
     */
    public Long getTenantId() {
        return (Long) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, String, LocalDateTime, LocalDateTime, String, String, Long> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, String, LocalDateTime, LocalDateTime, String, String, Long> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return LogSchedule.LOG_SCHEDULE.ID;
    }

    @Override
    public Field<String> field2() {
        return LogSchedule.LOG_SCHEDULE.COMMON_SCHEDULE_ID;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return LogSchedule.LOG_SCHEDULE.GMT_START;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return LogSchedule.LOG_SCHEDULE.GMT_END;
    }

    @Override
    public Field<String> field5() {
        return LogSchedule.LOG_SCHEDULE.STATE;
    }

    @Override
    public Field<String> field6() {
        return LogSchedule.LOG_SCHEDULE.REMARK;
    }

    @Override
    public Field<Long> field7() {
        return LogSchedule.LOG_SCHEDULE.TENANT_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getCommonScheduleId();
    }

    @Override
    public LocalDateTime component3() {
        return getGmtStart();
    }

    @Override
    public LocalDateTime component4() {
        return getGmtEnd();
    }

    @Override
    public String component5() {
        return getState();
    }

    @Override
    public String component6() {
        return getRemark();
    }

    @Override
    public Long component7() {
        return getTenantId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getCommonScheduleId();
    }

    @Override
    public LocalDateTime value3() {
        return getGmtStart();
    }

    @Override
    public LocalDateTime value4() {
        return getGmtEnd();
    }

    @Override
    public String value5() {
        return getState();
    }

    @Override
    public String value6() {
        return getRemark();
    }

    @Override
    public Long value7() {
        return getTenantId();
    }

    @Override
    public LogScheduleRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public LogScheduleRecord value2(String value) {
        setCommonScheduleId(value);
        return this;
    }

    @Override
    public LogScheduleRecord value3(LocalDateTime value) {
        setGmtStart(value);
        return this;
    }

    @Override
    public LogScheduleRecord value4(LocalDateTime value) {
        setGmtEnd(value);
        return this;
    }

    @Override
    public LogScheduleRecord value5(String value) {
        setState(value);
        return this;
    }

    @Override
    public LogScheduleRecord value6(String value) {
        setRemark(value);
        return this;
    }

    @Override
    public LogScheduleRecord value7(Long value) {
        setTenantId(value);
        return this;
    }

    @Override
    public LogScheduleRecord values(Long value1, String value2, LocalDateTime value3, LocalDateTime value4, String value5, String value6, Long value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LogScheduleRecord
     */
    public LogScheduleRecord() {
        super(LogSchedule.LOG_SCHEDULE);
    }

    /**
     * Create a detached, initialised LogScheduleRecord
     */
    public LogScheduleRecord(Long id, String commonScheduleId, LocalDateTime gmtStart, LocalDateTime gmtEnd, String state, String remark, Long tenantId) {
        super(LogSchedule.LOG_SCHEDULE);

        set(0, id);
        set(1, commonScheduleId);
        set(2, gmtStart);
        set(3, gmtEnd);
        set(4, state);
        set(5, remark);
        set(6, tenantId);
    }
}

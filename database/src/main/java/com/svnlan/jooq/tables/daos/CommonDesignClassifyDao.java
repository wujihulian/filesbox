/*
 * This file is generated by jOOQ.
 */
package com.svnlan.jooq.tables.daos;


import com.svnlan.jooq.tables.CommonDesignClassify;
import com.svnlan.jooq.tables.pojos.CommonDesignClassifyModel;
import com.svnlan.jooq.tables.records.CommonDesignClassifyRecord;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * 装扮目录分类表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CommonDesignClassifyDao extends DAOImpl<CommonDesignClassifyRecord, CommonDesignClassifyModel, Integer> {

    /**
     * Create a new CommonDesignClassifyDao without any configuration
     */
    public CommonDesignClassifyDao() {
        super(CommonDesignClassify.COMMON_DESIGN_CLASSIFY, CommonDesignClassifyModel.class);
    }

    /**
     * Create a new CommonDesignClassifyDao with an attached configuration
     */
    public CommonDesignClassifyDao(Configuration configuration) {
        super(CommonDesignClassify.COMMON_DESIGN_CLASSIFY, CommonDesignClassifyModel.class, configuration);
    }

    @Override
    public Integer getId(CommonDesignClassifyModel object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonDesignClassifyModel> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(CommonDesignClassify.COMMON_DESIGN_CLASSIFY.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<CommonDesignClassifyModel> fetchById(Integer... values) {
        return fetch(CommonDesignClassify.COMMON_DESIGN_CLASSIFY.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public CommonDesignClassifyModel fetchOneById(Integer value) {
        return fetchOne(CommonDesignClassify.COMMON_DESIGN_CLASSIFY.ID, value);
    }

    /**
     * Fetch records that have <code>type_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonDesignClassifyModel> fetchRangeOfTypeName(String lowerInclusive, String upperInclusive) {
        return fetchRange(CommonDesignClassify.COMMON_DESIGN_CLASSIFY.TYPE_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>type_name IN (values)</code>
     */
    public List<CommonDesignClassifyModel> fetchByTypeName(String... values) {
        return fetch(CommonDesignClassify.COMMON_DESIGN_CLASSIFY.TYPE_NAME, values);
    }

    /**
     * Fetch records that have <code>parent_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonDesignClassifyModel> fetchRangeOfParentId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(CommonDesignClassify.COMMON_DESIGN_CLASSIFY.PARENT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>parent_id IN (values)</code>
     */
    public List<CommonDesignClassifyModel> fetchByParentId(Integer... values) {
        return fetch(CommonDesignClassify.COMMON_DESIGN_CLASSIFY.PARENT_ID, values);
    }

    /**
     * Fetch records that have <code>parent_level BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonDesignClassifyModel> fetchRangeOfParentLevel(String lowerInclusive, String upperInclusive) {
        return fetchRange(CommonDesignClassify.COMMON_DESIGN_CLASSIFY.PARENT_LEVEL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>parent_level IN (values)</code>
     */
    public List<CommonDesignClassifyModel> fetchByParentLevel(String... values) {
        return fetch(CommonDesignClassify.COMMON_DESIGN_CLASSIFY.PARENT_LEVEL, values);
    }

    /**
     * Fetch records that have <code>status BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonDesignClassifyModel> fetchRangeOfStatus(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(CommonDesignClassify.COMMON_DESIGN_CLASSIFY.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<CommonDesignClassifyModel> fetchByStatus(Integer... values) {
        return fetch(CommonDesignClassify.COMMON_DESIGN_CLASSIFY.STATUS, values);
    }

    /**
     * Fetch records that have <code>sort BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonDesignClassifyModel> fetchRangeOfSort(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(CommonDesignClassify.COMMON_DESIGN_CLASSIFY.SORT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>sort IN (values)</code>
     */
    public List<CommonDesignClassifyModel> fetchBySort(Integer... values) {
        return fetch(CommonDesignClassify.COMMON_DESIGN_CLASSIFY.SORT, values);
    }

    /**
     * Fetch records that have <code>name_pinyin BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonDesignClassifyModel> fetchRangeOfNamePinyin(String lowerInclusive, String upperInclusive) {
        return fetchRange(CommonDesignClassify.COMMON_DESIGN_CLASSIFY.NAME_PINYIN, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name_pinyin IN (values)</code>
     */
    public List<CommonDesignClassifyModel> fetchByNamePinyin(String... values) {
        return fetch(CommonDesignClassify.COMMON_DESIGN_CLASSIFY.NAME_PINYIN, values);
    }

    /**
     * Fetch records that have <code>name_pinyin_simple BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonDesignClassifyModel> fetchRangeOfNamePinyinSimple(String lowerInclusive, String upperInclusive) {
        return fetchRange(CommonDesignClassify.COMMON_DESIGN_CLASSIFY.NAME_PINYIN_SIMPLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name_pinyin_simple IN (values)</code>
     */
    public List<CommonDesignClassifyModel> fetchByNamePinyinSimple(String... values) {
        return fetch(CommonDesignClassify.COMMON_DESIGN_CLASSIFY.NAME_PINYIN_SIMPLE, values);
    }

    /**
     * Fetch records that have <code>create_user BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonDesignClassifyModel> fetchRangeOfCreateUser(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(CommonDesignClassify.COMMON_DESIGN_CLASSIFY.CREATE_USER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_user IN (values)</code>
     */
    public List<CommonDesignClassifyModel> fetchByCreateUser(Long... values) {
        return fetch(CommonDesignClassify.COMMON_DESIGN_CLASSIFY.CREATE_USER, values);
    }

    /**
     * Fetch records that have <code>create_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonDesignClassifyModel> fetchRangeOfCreateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(CommonDesignClassify.COMMON_DESIGN_CLASSIFY.CREATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<CommonDesignClassifyModel> fetchByCreateTime(LocalDateTime... values) {
        return fetch(CommonDesignClassify.COMMON_DESIGN_CLASSIFY.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>modify_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonDesignClassifyModel> fetchRangeOfModifyTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(CommonDesignClassify.COMMON_DESIGN_CLASSIFY.MODIFY_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>modify_time IN (values)</code>
     */
    public List<CommonDesignClassifyModel> fetchByModifyTime(LocalDateTime... values) {
        return fetch(CommonDesignClassify.COMMON_DESIGN_CLASSIFY.MODIFY_TIME, values);
    }

    /**
     * Fetch records that have <code>tenant_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonDesignClassifyModel> fetchRangeOfTenantId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(CommonDesignClassify.COMMON_DESIGN_CLASSIFY.TENANT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tenant_id IN (values)</code>
     */
    public List<CommonDesignClassifyModel> fetchByTenantId(Long... values) {
        return fetch(CommonDesignClassify.COMMON_DESIGN_CLASSIFY.TENANT_ID, values);
    }
}

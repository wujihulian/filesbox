/*
 * This file is generated by jOOQ.
 */
package com.svnlan.jooq.tables.daos;


import com.svnlan.jooq.tables.IoFile;
import com.svnlan.jooq.tables.pojos.IoFileModel;
import com.svnlan.jooq.tables.records.IoFileRecord;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * 文档存储表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IoFileDao extends DAOImpl<IoFileRecord, IoFileModel, Long> {

    /**
     * Create a new IoFileDao without any configuration
     */
    public IoFileDao() {
        super(IoFile.IO_FILE, IoFileModel.class);
    }

    /**
     * Create a new IoFileDao with an attached configuration
     */
    public IoFileDao(Configuration configuration) {
        super(IoFile.IO_FILE, IoFileModel.class, configuration);
    }

    @Override
    public Long getId(IoFileModel object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<IoFileModel> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(IoFile.IO_FILE.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<IoFileModel> fetchById(Long... values) {
        return fetch(IoFile.IO_FILE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public IoFileModel fetchOneById(Long value) {
        return fetchOne(IoFile.IO_FILE.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<IoFileModel> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(IoFile.IO_FILE.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<IoFileModel> fetchByName(String... values) {
        return fetch(IoFile.IO_FILE.NAME, values);
    }

    /**
     * Fetch records that have <code>size BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<IoFileModel> fetchRangeOfSize(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(IoFile.IO_FILE.SIZE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>size IN (values)</code>
     */
    public List<IoFileModel> fetchBySize(Long... values) {
        return fetch(IoFile.IO_FILE.SIZE, values);
    }

    /**
     * Fetch records that have <code>io_type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<IoFileModel> fetchRangeOfIoType(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(IoFile.IO_FILE.IO_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>io_type IN (values)</code>
     */
    public List<IoFileModel> fetchByIoType(Long... values) {
        return fetch(IoFile.IO_FILE.IO_TYPE, values);
    }

    /**
     * Fetch records that have <code>path BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<IoFileModel> fetchRangeOfPath(String lowerInclusive, String upperInclusive) {
        return fetchRange(IoFile.IO_FILE.PATH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>path IN (values)</code>
     */
    public List<IoFileModel> fetchByPath(String... values) {
        return fetch(IoFile.IO_FILE.PATH, values);
    }

    /**
     * Fetch records that have <code>hash_simple BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<IoFileModel> fetchRangeOfHashSimple(String lowerInclusive, String upperInclusive) {
        return fetchRange(IoFile.IO_FILE.HASH_SIMPLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>hash_simple IN (values)</code>
     */
    public List<IoFileModel> fetchByHashSimple(String... values) {
        return fetch(IoFile.IO_FILE.HASH_SIMPLE, values);
    }

    /**
     * Fetch records that have <code>hash_md5 BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<IoFileModel> fetchRangeOfHashMd5(String lowerInclusive, String upperInclusive) {
        return fetchRange(IoFile.IO_FILE.HASH_MD5, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>hash_md5 IN (values)</code>
     */
    public List<IoFileModel> fetchByHashMd5(String... values) {
        return fetch(IoFile.IO_FILE.HASH_MD5, values);
    }

    /**
     * Fetch records that have <code>link_count BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<IoFileModel> fetchRangeOfLinkCount(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(IoFile.IO_FILE.LINK_COUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>link_count IN (values)</code>
     */
    public List<IoFileModel> fetchByLinkCount(Integer... values) {
        return fetch(IoFile.IO_FILE.LINK_COUNT, values);
    }

    /**
     * Fetch records that have <code>is_preview BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<IoFileModel> fetchRangeOfIsPreview(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(IoFile.IO_FILE.IS_PREVIEW, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>is_preview IN (values)</code>
     */
    public List<IoFileModel> fetchByIsPreview(Integer... values) {
        return fetch(IoFile.IO_FILE.IS_PREVIEW, values);
    }

    /**
     * Fetch records that have <code>app_preview BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<IoFileModel> fetchRangeOfAppPreview(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(IoFile.IO_FILE.APP_PREVIEW, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>app_preview IN (values)</code>
     */
    public List<IoFileModel> fetchByAppPreview(Integer... values) {
        return fetch(IoFile.IO_FILE.APP_PREVIEW, values);
    }

    /**
     * Fetch records that have <code>is_h264_preview BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<IoFileModel> fetchRangeOfIsH264Preview(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(IoFile.IO_FILE.IS_H264_PREVIEW, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>is_h264_preview IN (values)</code>
     */
    public List<IoFileModel> fetchByIsH264Preview(Integer... values) {
        return fetch(IoFile.IO_FILE.IS_H264_PREVIEW, values);
    }

    /**
     * Fetch records that have <code>is_m3u8 BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<IoFileModel> fetchRangeOfIsM3u8(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(IoFile.IO_FILE.IS_M3U8, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>is_m3u8 IN (values)</code>
     */
    public List<IoFileModel> fetchByIsM3u8(Integer... values) {
        return fetch(IoFile.IO_FILE.IS_M3U8, values);
    }

    /**
     * Fetch records that have <code>is_exist_file BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<IoFileModel> fetchRangeOfIsExistFile(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(IoFile.IO_FILE.IS_EXIST_FILE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>is_exist_file IN (values)</code>
     */
    public List<IoFileModel> fetchByIsExistFile(Integer... values) {
        return fetch(IoFile.IO_FILE.IS_EXIST_FILE, values);
    }

    /**
     * Fetch records that have <code>file_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<IoFileModel> fetchRangeOfFileName(String lowerInclusive, String upperInclusive) {
        return fetchRange(IoFile.IO_FILE.FILE_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>file_name IN (values)</code>
     */
    public List<IoFileModel> fetchByFileName(String... values) {
        return fetch(IoFile.IO_FILE.FILE_NAME, values);
    }

    /**
     * Fetch records that have <code>convert_size BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<IoFileModel> fetchRangeOfConvertSize(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(IoFile.IO_FILE.CONVERT_SIZE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>convert_size IN (values)</code>
     */
    public List<IoFileModel> fetchByConvertSize(Long... values) {
        return fetch(IoFile.IO_FILE.CONVERT_SIZE, values);
    }

    /**
     * Fetch records that have <code>thumb_size BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<IoFileModel> fetchRangeOfThumbSize(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(IoFile.IO_FILE.THUMB_SIZE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>thumb_size IN (values)</code>
     */
    public List<IoFileModel> fetchByThumbSize(Long... values) {
        return fetch(IoFile.IO_FILE.THUMB_SIZE, values);
    }

    /**
     * Fetch records that have <code>create_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<IoFileModel> fetchRangeOfCreateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(IoFile.IO_FILE.CREATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<IoFileModel> fetchByCreateTime(LocalDateTime... values) {
        return fetch(IoFile.IO_FILE.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>modify_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<IoFileModel> fetchRangeOfModifyTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(IoFile.IO_FILE.MODIFY_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>modify_time IN (values)</code>
     */
    public List<IoFileModel> fetchByModifyTime(LocalDateTime... values) {
        return fetch(IoFile.IO_FILE.MODIFY_TIME, values);
    }

    /**
     * Fetch records that have <code>tenant_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<IoFileModel> fetchRangeOfTenantId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(IoFile.IO_FILE.TENANT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tenant_id IN (values)</code>
     */
    public List<IoFileModel> fetchByTenantId(Long... values) {
        return fetch(IoFile.IO_FILE.TENANT_ID, values);
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<IoFileModel> fetchRangeOfUserId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(IoFile.IO_FILE.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<IoFileModel> fetchByUserId(Long... values) {
        return fetch(IoFile.IO_FILE.USER_ID, values);
    }
}

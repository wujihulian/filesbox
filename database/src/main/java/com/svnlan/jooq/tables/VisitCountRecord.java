/*
 * This file is generated by jOOQ.
 */
package com.svnlan.jooq.tables;


import com.svnlan.jooq.CloudDisk;
import com.svnlan.jooq.Indexes;
import com.svnlan.jooq.Keys;
import com.svnlan.jooq.tables.records.VisitCountRecordRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.Date;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 访问次数记录表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VisitCountRecord extends TableImpl<VisitCountRecordRecord> {

    private static final long serialVersionUID = 413375342;

    /**
     * The reference instance of <code>cloud_disk.visit_count_record</code>
     */
    public static final VisitCountRecord VISIT_COUNT_RECORD = new VisitCountRecord();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VisitCountRecordRecord> getRecordType() {
        return VisitCountRecordRecord.class;
    }

    /**
     * The column <code>cloud_disk.visit_count_record.id</code>.
     */
    public final TableField<VisitCountRecordRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>cloud_disk.visit_count_record.visit_count</code>. 用户访问次数
     */
    public final TableField<VisitCountRecordRecord, Long> VISIT_COUNT = createField(DSL.name("visit_count"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "用户访问次数");

    /**
     * The column <code>cloud_disk.visit_count_record.device_type</code>. 设备类型 1 pc , 2 h5, 3 安卓app, 4 ios-app, 5 小程序, 6 电脑app, 7 其他
     */
    public final TableField<VisitCountRecordRecord, Integer> DEVICE_TYPE = createField(DSL.name("device_type"), org.jooq.impl.SQLDataType.INTEGER, this, "设备类型 1 pc , 2 h5, 3 安卓app, 4 ios-app, 5 小程序, 6 电脑app, 7 其他");

    /**
     * The column <code>cloud_disk.visit_count_record.os_name</code>. 操作系统
     */
    public final TableField<VisitCountRecordRecord, String> OS_NAME = createField(DSL.name("os_name"), org.jooq.impl.SQLDataType.VARCHAR(20), this, "操作系统");

    /**
     * The column <code>cloud_disk.visit_count_record.type</code>. 1 客户端访问 2 用户访问 3 操作系统访问 4 各操作系统总访问
     */
    public final TableField<VisitCountRecordRecord, Integer> TYPE = createField(DSL.name("type"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.INTEGER)), this, "1 客户端访问 2 用户访问 3 操作系统访问 4 各操作系统总访问");

    /**
     * The column <code>cloud_disk.visit_count_record.visit_day</code>. 访问的日期
     */
    public final TableField<VisitCountRecordRecord, Date> VISIT_DAY = createField(DSL.name("visit_day"), org.jooq.impl.SQLDataType.DATE.nullable(false), this, "访问的日期");

    /**
     * The column <code>cloud_disk.visit_count_record.modify_time</code>. 最后修改时间
     */
    public final TableField<VisitCountRecordRecord, LocalDateTime> MODIFY_TIME = createField(DSL.name("modify_time"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "最后修改时间");

    /**
     * The column <code>cloud_disk.visit_count_record.create_time</code>. 创建时间
     */
    public final TableField<VisitCountRecordRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "创建时间");

    /**
     * The column <code>cloud_disk.visit_count_record.tenant_id</code>. 租户id
     */
    public final TableField<VisitCountRecordRecord, Long> TENANT_ID = createField(DSL.name("tenant_id"), org.jooq.impl.SQLDataType.BIGINT, this, "租户id");

    /**
     * Create a <code>cloud_disk.visit_count_record</code> table reference
     */
    public VisitCountRecord() {
        this(DSL.name("visit_count_record"), null);
    }

    /**
     * Create an aliased <code>cloud_disk.visit_count_record</code> table reference
     */
    public VisitCountRecord(String alias) {
        this(DSL.name(alias), VISIT_COUNT_RECORD);
    }

    /**
     * Create an aliased <code>cloud_disk.visit_count_record</code> table reference
     */
    public VisitCountRecord(Name alias) {
        this(alias, VISIT_COUNT_RECORD);
    }

    private VisitCountRecord(Name alias, Table<VisitCountRecordRecord> aliased) {
        this(alias, aliased, null);
    }

    private VisitCountRecord(Name alias, Table<VisitCountRecordRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("访问次数记录表"));
    }

    public <O extends Record> VisitCountRecord(Table<O> child, ForeignKey<O, VisitCountRecordRecord> key) {
        super(child, key, VISIT_COUNT_RECORD);
    }

    @Override
    public Schema getSchema() {
        return CloudDisk.CLOUD_DISK;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.VISIT_COUNT_RECORD_PRIMARY);
    }

    @Override
    public Identity<VisitCountRecordRecord, Long> getIdentity() {
        return Keys.IDENTITY_VISIT_COUNT_RECORD;
    }

    @Override
    public UniqueKey<VisitCountRecordRecord> getPrimaryKey() {
        return Keys.KEY_VISIT_COUNT_RECORD_PRIMARY;
    }

    @Override
    public List<UniqueKey<VisitCountRecordRecord>> getKeys() {
        return Arrays.<UniqueKey<VisitCountRecordRecord>>asList(Keys.KEY_VISIT_COUNT_RECORD_PRIMARY);
    }

    @Override
    public VisitCountRecord as(String alias) {
        return new VisitCountRecord(DSL.name(alias), this);
    }

    @Override
    public VisitCountRecord as(Name alias) {
        return new VisitCountRecord(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public VisitCountRecord rename(String name) {
        return new VisitCountRecord(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public VisitCountRecord rename(Name name) {
        return new VisitCountRecord(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, Long, Integer, String, Integer, Date, LocalDateTime, LocalDateTime, Long> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}

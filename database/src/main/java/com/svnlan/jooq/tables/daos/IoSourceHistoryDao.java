/*
 * This file is generated by jOOQ.
 */
package com.svnlan.jooq.tables.daos;


import com.svnlan.jooq.tables.IoSourceHistory;
import com.svnlan.jooq.tables.pojos.IoSourceHistoryModel;
import com.svnlan.jooq.tables.records.IoSourceHistoryRecord;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * 文档历史记录表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IoSourceHistoryDao extends DAOImpl<IoSourceHistoryRecord, IoSourceHistoryModel, Long> {

    /**
     * Create a new IoSourceHistoryDao without any configuration
     */
    public IoSourceHistoryDao() {
        super(IoSourceHistory.IO_SOURCE_HISTORY, IoSourceHistoryModel.class);
    }

    /**
     * Create a new IoSourceHistoryDao with an attached configuration
     */
    public IoSourceHistoryDao(Configuration configuration) {
        super(IoSourceHistory.IO_SOURCE_HISTORY, IoSourceHistoryModel.class, configuration);
    }

    @Override
    public Long getId(IoSourceHistoryModel object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<IoSourceHistoryModel> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(IoSourceHistory.IO_SOURCE_HISTORY.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<IoSourceHistoryModel> fetchById(Long... values) {
        return fetch(IoSourceHistory.IO_SOURCE_HISTORY.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public IoSourceHistoryModel fetchOneById(Long value) {
        return fetchOne(IoSourceHistory.IO_SOURCE_HISTORY.ID, value);
    }

    /**
     * Fetch records that have <code>source_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<IoSourceHistoryModel> fetchRangeOfSourceId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(IoSourceHistory.IO_SOURCE_HISTORY.SOURCE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>source_id IN (values)</code>
     */
    public List<IoSourceHistoryModel> fetchBySourceId(Long... values) {
        return fetch(IoSourceHistory.IO_SOURCE_HISTORY.SOURCE_ID, values);
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<IoSourceHistoryModel> fetchRangeOfUserId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(IoSourceHistory.IO_SOURCE_HISTORY.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<IoSourceHistoryModel> fetchByUserId(Long... values) {
        return fetch(IoSourceHistory.IO_SOURCE_HISTORY.USER_ID, values);
    }

    /**
     * Fetch records that have <code>file_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<IoSourceHistoryModel> fetchRangeOfFileId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(IoSourceHistory.IO_SOURCE_HISTORY.FILE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>file_id IN (values)</code>
     */
    public List<IoSourceHistoryModel> fetchByFileId(Long... values) {
        return fetch(IoSourceHistory.IO_SOURCE_HISTORY.FILE_ID, values);
    }

    /**
     * Fetch records that have <code>size BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<IoSourceHistoryModel> fetchRangeOfSize(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(IoSourceHistory.IO_SOURCE_HISTORY.SIZE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>size IN (values)</code>
     */
    public List<IoSourceHistoryModel> fetchBySize(Long... values) {
        return fetch(IoSourceHistory.IO_SOURCE_HISTORY.SIZE, values);
    }

    /**
     * Fetch records that have <code>detail BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<IoSourceHistoryModel> fetchRangeOfDetail(String lowerInclusive, String upperInclusive) {
        return fetchRange(IoSourceHistory.IO_SOURCE_HISTORY.DETAIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>detail IN (values)</code>
     */
    public List<IoSourceHistoryModel> fetchByDetail(String... values) {
        return fetch(IoSourceHistory.IO_SOURCE_HISTORY.DETAIL, values);
    }

    /**
     * Fetch records that have <code>create_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<IoSourceHistoryModel> fetchRangeOfCreateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(IoSourceHistory.IO_SOURCE_HISTORY.CREATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<IoSourceHistoryModel> fetchByCreateTime(LocalDateTime... values) {
        return fetch(IoSourceHistory.IO_SOURCE_HISTORY.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>modify_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<IoSourceHistoryModel> fetchRangeOfModifyTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(IoSourceHistory.IO_SOURCE_HISTORY.MODIFY_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>modify_time IN (values)</code>
     */
    public List<IoSourceHistoryModel> fetchByModifyTime(LocalDateTime... values) {
        return fetch(IoSourceHistory.IO_SOURCE_HISTORY.MODIFY_TIME, values);
    }

    /**
     * Fetch records that have <code>tenant_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<IoSourceHistoryModel> fetchRangeOfTenantId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(IoSourceHistory.IO_SOURCE_HISTORY.TENANT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tenant_id IN (values)</code>
     */
    public List<IoSourceHistoryModel> fetchByTenantId(Long... values) {
        return fetch(IoSourceHistory.IO_SOURCE_HISTORY.TENANT_ID, values);
    }
}

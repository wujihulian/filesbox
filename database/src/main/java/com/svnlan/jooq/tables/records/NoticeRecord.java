/*
 * This file is generated by jOOQ.
 */
package com.svnlan.jooq.tables.records;


import com.svnlan.jooq.tables.Notice;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record14;
import org.jooq.Row14;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 通知表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NoticeRecord extends UpdatableRecordImpl<NoticeRecord> implements Record14<Long, String, Integer, Integer, Integer, Integer, LocalDateTime, Long, Long, String, Integer, LocalDateTime, LocalDateTime, Long> {

    private static final long serialVersionUID = -419633591;

    /**
     * Setter for <code>cloud_disk.notice.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>cloud_disk.notice.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>cloud_disk.notice.title</code>. 标题
     */
    public void setTitle(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>cloud_disk.notice.title</code>. 标题
     */
    public String getTitle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>cloud_disk.notice.level</code>. 0 弱提示：左下角通知栏显示红点；1 强提示：用户登录后直接弹出通知。
     */
    public void setLevel(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>cloud_disk.notice.level</code>. 0 弱提示：左下角通知栏显示红点；1 强提示：用户登录后直接弹出通知。
     */
    public Integer getLevel() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>cloud_disk.notice.status</code>. 状态，0暂存，1已发送，2已删除
     */
    public void setStatus(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>cloud_disk.notice.status</code>. 状态，0暂存，1已发送，2已删除
     */
    public Integer getStatus() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>cloud_disk.notice.enable</code>. 是否启用，0未启用，1启用
     */
    public void setEnable(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>cloud_disk.notice.enable</code>. 是否启用，0未启用，1启用
     */
    public Integer getEnable() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>cloud_disk.notice.send_type</code>. 推送方式 1 立即推送 2 计划推送
     */
    public void setSendType(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>cloud_disk.notice.send_type</code>. 推送方式 1 立即推送 2 计划推送
     */
    public Integer getSendType() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>cloud_disk.notice.send_time</code>. 通知发送时间
     */
    public void setSendTime(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>cloud_disk.notice.send_time</code>. 通知发送时间
     */
    public LocalDateTime getSendTime() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>cloud_disk.notice.sort</code>. 排序 越大越靠前
     */
    public void setSort(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>cloud_disk.notice.sort</code>. 排序 越大越靠前
     */
    public Long getSort() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>cloud_disk.notice.sender_id</code>. 通知发送者id
     */
    public void setSenderId(Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>cloud_disk.notice.sender_id</code>. 通知发送者id
     */
    public Long getSenderId() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>cloud_disk.notice.sender_ip</code>. 发送通知的IP地址，json(222.22.22.22,杭州)
     */
    public void setSenderIp(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>cloud_disk.notice.sender_ip</code>. 发送通知的IP地址，json(222.22.22.22,杭州)
     */
    public String getSenderIp() {
        return (String) get(9);
    }

    /**
     * Setter for <code>cloud_disk.notice.notice_type</code>. 消息类型，1通知2消息3私信
     */
    public void setNoticeType(Integer value) {
        set(10, value);
    }

    /**
     * Getter for <code>cloud_disk.notice.notice_type</code>. 消息类型，1通知2消息3私信
     */
    public Integer getNoticeType() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>cloud_disk.notice.create_time</code>. 创建时间
     */
    public void setCreateTime(LocalDateTime value) {
        set(11, value);
    }

    /**
     * Getter for <code>cloud_disk.notice.create_time</code>. 创建时间
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(11);
    }

    /**
     * Setter for <code>cloud_disk.notice.modify_time</code>. 更新时间
     */
    public void setModifyTime(LocalDateTime value) {
        set(12, value);
    }

    /**
     * Getter for <code>cloud_disk.notice.modify_time</code>. 更新时间
     */
    public LocalDateTime getModifyTime() {
        return (LocalDateTime) get(12);
    }

    /**
     * Setter for <code>cloud_disk.notice.tenant_id</code>. 租户id
     */
    public void setTenantId(Long value) {
        set(13, value);
    }

    /**
     * Getter for <code>cloud_disk.notice.tenant_id</code>. 租户id
     */
    public Long getTenantId() {
        return (Long) get(13);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record14 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row14<Long, String, Integer, Integer, Integer, Integer, LocalDateTime, Long, Long, String, Integer, LocalDateTime, LocalDateTime, Long> fieldsRow() {
        return (Row14) super.fieldsRow();
    }

    @Override
    public Row14<Long, String, Integer, Integer, Integer, Integer, LocalDateTime, Long, Long, String, Integer, LocalDateTime, LocalDateTime, Long> valuesRow() {
        return (Row14) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Notice.NOTICE.ID;
    }

    @Override
    public Field<String> field2() {
        return Notice.NOTICE.TITLE;
    }

    @Override
    public Field<Integer> field3() {
        return Notice.NOTICE.LEVEL;
    }

    @Override
    public Field<Integer> field4() {
        return Notice.NOTICE.STATUS;
    }

    @Override
    public Field<Integer> field5() {
        return Notice.NOTICE.ENABLE;
    }

    @Override
    public Field<Integer> field6() {
        return Notice.NOTICE.SEND_TYPE;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return Notice.NOTICE.SEND_TIME;
    }

    @Override
    public Field<Long> field8() {
        return Notice.NOTICE.SORT;
    }

    @Override
    public Field<Long> field9() {
        return Notice.NOTICE.SENDER_ID;
    }

    @Override
    public Field<String> field10() {
        return Notice.NOTICE.SENDER_IP;
    }

    @Override
    public Field<Integer> field11() {
        return Notice.NOTICE.NOTICE_TYPE;
    }

    @Override
    public Field<LocalDateTime> field12() {
        return Notice.NOTICE.CREATE_TIME;
    }

    @Override
    public Field<LocalDateTime> field13() {
        return Notice.NOTICE.MODIFY_TIME;
    }

    @Override
    public Field<Long> field14() {
        return Notice.NOTICE.TENANT_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getTitle();
    }

    @Override
    public Integer component3() {
        return getLevel();
    }

    @Override
    public Integer component4() {
        return getStatus();
    }

    @Override
    public Integer component5() {
        return getEnable();
    }

    @Override
    public Integer component6() {
        return getSendType();
    }

    @Override
    public LocalDateTime component7() {
        return getSendTime();
    }

    @Override
    public Long component8() {
        return getSort();
    }

    @Override
    public Long component9() {
        return getSenderId();
    }

    @Override
    public String component10() {
        return getSenderIp();
    }

    @Override
    public Integer component11() {
        return getNoticeType();
    }

    @Override
    public LocalDateTime component12() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime component13() {
        return getModifyTime();
    }

    @Override
    public Long component14() {
        return getTenantId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getTitle();
    }

    @Override
    public Integer value3() {
        return getLevel();
    }

    @Override
    public Integer value4() {
        return getStatus();
    }

    @Override
    public Integer value5() {
        return getEnable();
    }

    @Override
    public Integer value6() {
        return getSendType();
    }

    @Override
    public LocalDateTime value7() {
        return getSendTime();
    }

    @Override
    public Long value8() {
        return getSort();
    }

    @Override
    public Long value9() {
        return getSenderId();
    }

    @Override
    public String value10() {
        return getSenderIp();
    }

    @Override
    public Integer value11() {
        return getNoticeType();
    }

    @Override
    public LocalDateTime value12() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime value13() {
        return getModifyTime();
    }

    @Override
    public Long value14() {
        return getTenantId();
    }

    @Override
    public NoticeRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public NoticeRecord value2(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public NoticeRecord value3(Integer value) {
        setLevel(value);
        return this;
    }

    @Override
    public NoticeRecord value4(Integer value) {
        setStatus(value);
        return this;
    }

    @Override
    public NoticeRecord value5(Integer value) {
        setEnable(value);
        return this;
    }

    @Override
    public NoticeRecord value6(Integer value) {
        setSendType(value);
        return this;
    }

    @Override
    public NoticeRecord value7(LocalDateTime value) {
        setSendTime(value);
        return this;
    }

    @Override
    public NoticeRecord value8(Long value) {
        setSort(value);
        return this;
    }

    @Override
    public NoticeRecord value9(Long value) {
        setSenderId(value);
        return this;
    }

    @Override
    public NoticeRecord value10(String value) {
        setSenderIp(value);
        return this;
    }

    @Override
    public NoticeRecord value11(Integer value) {
        setNoticeType(value);
        return this;
    }

    @Override
    public NoticeRecord value12(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public NoticeRecord value13(LocalDateTime value) {
        setModifyTime(value);
        return this;
    }

    @Override
    public NoticeRecord value14(Long value) {
        setTenantId(value);
        return this;
    }

    @Override
    public NoticeRecord values(Long value1, String value2, Integer value3, Integer value4, Integer value5, Integer value6, LocalDateTime value7, Long value8, Long value9, String value10, Integer value11, LocalDateTime value12, LocalDateTime value13, Long value14) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NoticeRecord
     */
    public NoticeRecord() {
        super(Notice.NOTICE);
    }

    /**
     * Create a detached, initialised NoticeRecord
     */
    public NoticeRecord(Long id, String title, Integer level, Integer status, Integer enable, Integer sendType, LocalDateTime sendTime, Long sort, Long senderId, String senderIp, Integer noticeType, LocalDateTime createTime, LocalDateTime modifyTime, Long tenantId) {
        super(Notice.NOTICE);

        set(0, id);
        set(1, title);
        set(2, level);
        set(3, status);
        set(4, enable);
        set(5, sendType);
        set(6, sendTime);
        set(7, sort);
        set(8, senderId);
        set(9, senderIp);
        set(10, noticeType);
        set(11, createTime);
        set(12, modifyTime);
        set(13, tenantId);
    }
}

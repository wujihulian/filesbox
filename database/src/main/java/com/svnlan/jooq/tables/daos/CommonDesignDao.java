/*
 * This file is generated by jOOQ.
 */
package com.svnlan.jooq.tables.daos;


import com.svnlan.jooq.tables.CommonDesign;
import com.svnlan.jooq.tables.pojos.CommonDesignModel;
import com.svnlan.jooq.tables.records.CommonDesignRecord;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * 页面编辑器表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CommonDesignDao extends DAOImpl<CommonDesignRecord, CommonDesignModel, Long> {

    /**
     * Create a new CommonDesignDao without any configuration
     */
    public CommonDesignDao() {
        super(CommonDesign.COMMON_DESIGN, CommonDesignModel.class);
    }

    /**
     * Create a new CommonDesignDao with an attached configuration
     */
    public CommonDesignDao(Configuration configuration) {
        super(CommonDesign.COMMON_DESIGN, CommonDesignModel.class, configuration);
    }

    @Override
    public Long getId(CommonDesignModel object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonDesignModel> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(CommonDesign.COMMON_DESIGN.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<CommonDesignModel> fetchById(Long... values) {
        return fetch(CommonDesign.COMMON_DESIGN.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public CommonDesignModel fetchOneById(Long value) {
        return fetchOne(CommonDesign.COMMON_DESIGN.ID, value);
    }

    /**
     * Fetch records that have <code>title BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonDesignModel> fetchRangeOfTitle(String lowerInclusive, String upperInclusive) {
        return fetchRange(CommonDesign.COMMON_DESIGN.TITLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>title IN (values)</code>
     */
    public List<CommonDesignModel> fetchByTitle(String... values) {
        return fetch(CommonDesign.COMMON_DESIGN.TITLE, values);
    }

    /**
     * Fetch records that have <code>offset BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonDesignModel> fetchRangeOfOffset(String lowerInclusive, String upperInclusive) {
        return fetchRange(CommonDesign.COMMON_DESIGN.OFFSET, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>offset IN (values)</code>
     */
    public List<CommonDesignModel> fetchByOffset(String... values) {
        return fetch(CommonDesign.COMMON_DESIGN.OFFSET, values);
    }

    /**
     * Fetch records that have <code>size BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonDesignModel> fetchRangeOfSize(String lowerInclusive, String upperInclusive) {
        return fetchRange(CommonDesign.COMMON_DESIGN.SIZE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>size IN (values)</code>
     */
    public List<CommonDesignModel> fetchBySize(String... values) {
        return fetch(CommonDesign.COMMON_DESIGN.SIZE, values);
    }

    /**
     * Fetch records that have <code>pic BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonDesignModel> fetchRangeOfPic(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(CommonDesign.COMMON_DESIGN.PIC, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>pic IN (values)</code>
     */
    public List<CommonDesignModel> fetchByPic(Long... values) {
        return fetch(CommonDesign.COMMON_DESIGN.PIC, values);
    }

    /**
     * Fetch records that have <code>gmt_create BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonDesignModel> fetchRangeOfGmtCreate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(CommonDesign.COMMON_DESIGN.GMT_CREATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>gmt_create IN (values)</code>
     */
    public List<CommonDesignModel> fetchByGmtCreate(LocalDateTime... values) {
        return fetch(CommonDesign.COMMON_DESIGN.GMT_CREATE, values);
    }

    /**
     * Fetch records that have <code>gmt_modified BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonDesignModel> fetchRangeOfGmtModified(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(CommonDesign.COMMON_DESIGN.GMT_MODIFIED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>gmt_modified IN (values)</code>
     */
    public List<CommonDesignModel> fetchByGmtModified(LocalDateTime... values) {
        return fetch(CommonDesign.COMMON_DESIGN.GMT_MODIFIED, values);
    }

    /**
     * Fetch records that have <code>detail BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonDesignModel> fetchRangeOfDetail(String lowerInclusive, String upperInclusive) {
        return fetchRange(CommonDesign.COMMON_DESIGN.DETAIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>detail IN (values)</code>
     */
    public List<CommonDesignModel> fetchByDetail(String... values) {
        return fetch(CommonDesign.COMMON_DESIGN.DETAIL, values);
    }

    /**
     * Fetch records that have <code>design_type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonDesignModel> fetchRangeOfDesignType(String lowerInclusive, String upperInclusive) {
        return fetchRange(CommonDesign.COMMON_DESIGN.DESIGN_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>design_type IN (values)</code>
     */
    public List<CommonDesignModel> fetchByDesignType(String... values) {
        return fetch(CommonDesign.COMMON_DESIGN.DESIGN_TYPE, values);
    }

    /**
     * Fetch records that have <code>client_type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonDesignModel> fetchRangeOfClientType(String lowerInclusive, String upperInclusive) {
        return fetchRange(CommonDesign.COMMON_DESIGN.CLIENT_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>client_type IN (values)</code>
     */
    public List<CommonDesignModel> fetchByClientType(String... values) {
        return fetch(CommonDesign.COMMON_DESIGN.CLIENT_TYPE, values);
    }

    /**
     * Fetch records that have <code>is_used BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonDesignModel> fetchRangeOfIsUsed(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(CommonDesign.COMMON_DESIGN.IS_USED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>is_used IN (values)</code>
     */
    public List<CommonDesignModel> fetchByIsUsed(Integer... values) {
        return fetch(CommonDesign.COMMON_DESIGN.IS_USED, values);
    }

    /**
     * Fetch records that have <code>url BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonDesignModel> fetchRangeOfUrl(String lowerInclusive, String upperInclusive) {
        return fetchRange(CommonDesign.COMMON_DESIGN.URL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>url IN (values)</code>
     */
    public List<CommonDesignModel> fetchByUrl(String... values) {
        return fetch(CommonDesign.COMMON_DESIGN.URL, values);
    }

    /**
     * Fetch records that have <code>file_url BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonDesignModel> fetchRangeOfFileUrl(String lowerInclusive, String upperInclusive) {
        return fetchRange(CommonDesign.COMMON_DESIGN.FILE_URL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>file_url IN (values)</code>
     */
    public List<CommonDesignModel> fetchByFileUrl(String... values) {
        return fetch(CommonDesign.COMMON_DESIGN.FILE_URL, values);
    }

    /**
     * Fetch records that have <code>fk_common_design_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonDesignModel> fetchRangeOfFkCommonDesignId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(CommonDesign.COMMON_DESIGN.FK_COMMON_DESIGN_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>fk_common_design_id IN (values)</code>
     */
    public List<CommonDesignModel> fetchByFkCommonDesignId(Long... values) {
        return fetch(CommonDesign.COMMON_DESIGN.FK_COMMON_DESIGN_ID, values);
    }

    /**
     * Fetch records that have <code>foot BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonDesignModel> fetchRangeOfFoot(String lowerInclusive, String upperInclusive) {
        return fetchRange(CommonDesign.COMMON_DESIGN.FOOT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>foot IN (values)</code>
     */
    public List<CommonDesignModel> fetchByFoot(String... values) {
        return fetch(CommonDesign.COMMON_DESIGN.FOOT, values);
    }

    /**
     * Fetch records that have <code>head BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonDesignModel> fetchRangeOfHead(String lowerInclusive, String upperInclusive) {
        return fetchRange(CommonDesign.COMMON_DESIGN.HEAD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>head IN (values)</code>
     */
    public List<CommonDesignModel> fetchByHead(String... values) {
        return fetch(CommonDesign.COMMON_DESIGN.HEAD, values);
    }

    /**
     * Fetch records that have <code>setting BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonDesignModel> fetchRangeOfSetting(String lowerInclusive, String upperInclusive) {
        return fetchRange(CommonDesign.COMMON_DESIGN.SETTING, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>setting IN (values)</code>
     */
    public List<CommonDesignModel> fetchBySetting(String... values) {
        return fetch(CommonDesign.COMMON_DESIGN.SETTING, values);
    }

    /**
     * Fetch records that have <code>applet BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonDesignModel> fetchRangeOfApplet(String lowerInclusive, String upperInclusive) {
        return fetchRange(CommonDesign.COMMON_DESIGN.APPLET, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>applet IN (values)</code>
     */
    public List<CommonDesignModel> fetchByApplet(String... values) {
        return fetch(CommonDesign.COMMON_DESIGN.APPLET, values);
    }

    /**
     * Fetch records that have <code>source_design_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonDesignModel> fetchRangeOfSourceDesignId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(CommonDesign.COMMON_DESIGN.SOURCE_DESIGN_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>source_design_id IN (values)</code>
     */
    public List<CommonDesignModel> fetchBySourceDesignId(Long... values) {
        return fetch(CommonDesign.COMMON_DESIGN.SOURCE_DESIGN_ID, values);
    }

    /**
     * Fetch records that have <code>approval_state BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonDesignModel> fetchRangeOfApprovalState(String lowerInclusive, String upperInclusive) {
        return fetchRange(CommonDesign.COMMON_DESIGN.APPROVAL_STATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>approval_state IN (values)</code>
     */
    public List<CommonDesignModel> fetchByApprovalState(String... values) {
        return fetch(CommonDesign.COMMON_DESIGN.APPROVAL_STATE, values);
    }

    /**
     * Fetch records that have <code>approval_detail BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonDesignModel> fetchRangeOfApprovalDetail(String lowerInclusive, String upperInclusive) {
        return fetchRange(CommonDesign.COMMON_DESIGN.APPROVAL_DETAIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>approval_detail IN (values)</code>
     */
    public List<CommonDesignModel> fetchByApprovalDetail(String... values) {
        return fetch(CommonDesign.COMMON_DESIGN.APPROVAL_DETAIL, values);
    }

    /**
     * Fetch records that have <code>gmt_approval BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonDesignModel> fetchRangeOfGmtApproval(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(CommonDesign.COMMON_DESIGN.GMT_APPROVAL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>gmt_approval IN (values)</code>
     */
    public List<CommonDesignModel> fetchByGmtApproval(LocalDateTime... values) {
        return fetch(CommonDesign.COMMON_DESIGN.GMT_APPROVAL, values);
    }

    /**
     * Fetch records that have <code>sort BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonDesignModel> fetchRangeOfSort(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(CommonDesign.COMMON_DESIGN.SORT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>sort IN (values)</code>
     */
    public List<CommonDesignModel> fetchBySort(Integer... values) {
        return fetch(CommonDesign.COMMON_DESIGN.SORT, values);
    }

    /**
     * Fetch records that have <code>state BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonDesignModel> fetchRangeOfState(String lowerInclusive, String upperInclusive) {
        return fetchRange(CommonDesign.COMMON_DESIGN.STATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>state IN (values)</code>
     */
    public List<CommonDesignModel> fetchByState(String... values) {
        return fetch(CommonDesign.COMMON_DESIGN.STATE, values);
    }

    /**
     * Fetch records that have <code>is_paste BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonDesignModel> fetchRangeOfIsPaste(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(CommonDesign.COMMON_DESIGN.IS_PASTE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>is_paste IN (values)</code>
     */
    public List<CommonDesignModel> fetchByIsPaste(Integer... values) {
        return fetch(CommonDesign.COMMON_DESIGN.IS_PASTE, values);
    }

    /**
     * Fetch records that have <code>seo BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonDesignModel> fetchRangeOfSeo(String lowerInclusive, String upperInclusive) {
        return fetchRange(CommonDesign.COMMON_DESIGN.SEO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>seo IN (values)</code>
     */
    public List<CommonDesignModel> fetchBySeo(String... values) {
        return fetch(CommonDesign.COMMON_DESIGN.SEO, values);
    }

    /**
     * Fetch records that have <code>mb_design_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonDesignModel> fetchRangeOfMbDesignId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(CommonDesign.COMMON_DESIGN.MB_DESIGN_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>mb_design_id IN (values)</code>
     */
    public List<CommonDesignModel> fetchByMbDesignId(Long... values) {
        return fetch(CommonDesign.COMMON_DESIGN.MB_DESIGN_ID, values);
    }

    /**
     * Fetch records that have <code>design_classify_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonDesignModel> fetchRangeOfDesignClassifyId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(CommonDesign.COMMON_DESIGN.DESIGN_CLASSIFY_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>design_classify_id IN (values)</code>
     */
    public List<CommonDesignModel> fetchByDesignClassifyId(Integer... values) {
        return fetch(CommonDesign.COMMON_DESIGN.DESIGN_CLASSIFY_ID, values);
    }

    /**
     * Fetch records that have <code>path_pre BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonDesignModel> fetchRangeOfPathPre(String lowerInclusive, String upperInclusive) {
        return fetchRange(CommonDesign.COMMON_DESIGN.PATH_PRE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>path_pre IN (values)</code>
     */
    public List<CommonDesignModel> fetchByPathPre(String... values) {
        return fetch(CommonDesign.COMMON_DESIGN.PATH_PRE, values);
    }

    /**
     * Fetch records that have <code>tenant_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<CommonDesignModel> fetchRangeOfTenantId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(CommonDesign.COMMON_DESIGN.TENANT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tenant_id IN (values)</code>
     */
    public List<CommonDesignModel> fetchByTenantId(Long... values) {
        return fetch(CommonDesign.COMMON_DESIGN.TENANT_ID, values);
    }
}

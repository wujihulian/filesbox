/*
 * This file is generated by jOOQ.
 */
package com.svnlan.jooq.tables.daos;


import com.svnlan.jooq.tables.SystemSession;
import com.svnlan.jooq.tables.pojos.SystemSessionModel;
import com.svnlan.jooq.tables.records.SystemSessionRecord;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * session
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SystemSessionDao extends DAOImpl<SystemSessionRecord, SystemSessionModel, Integer> {

    /**
     * Create a new SystemSessionDao without any configuration
     */
    public SystemSessionDao() {
        super(SystemSession.SYSTEM_SESSION, SystemSessionModel.class);
    }

    /**
     * Create a new SystemSessionDao with an attached configuration
     */
    public SystemSessionDao(Configuration configuration) {
        super(SystemSession.SYSTEM_SESSION, SystemSessionModel.class, configuration);
    }

    @Override
    public Integer getId(SystemSessionModel object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<SystemSessionModel> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(SystemSession.SYSTEM_SESSION.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<SystemSessionModel> fetchById(Integer... values) {
        return fetch(SystemSession.SYSTEM_SESSION.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public SystemSessionModel fetchOneById(Integer value) {
        return fetchOne(SystemSession.SYSTEM_SESSION.ID, value);
    }

    /**
     * Fetch records that have <code>sign BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<SystemSessionModel> fetchRangeOfSign(String lowerInclusive, String upperInclusive) {
        return fetchRange(SystemSession.SYSTEM_SESSION.SIGN, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>sign IN (values)</code>
     */
    public List<SystemSessionModel> fetchBySign(String... values) {
        return fetch(SystemSession.SYSTEM_SESSION.SIGN, values);
    }

    /**
     * Fetch a unique record that has <code>sign = value</code>
     */
    public SystemSessionModel fetchOneBySign(String value) {
        return fetchOne(SystemSession.SYSTEM_SESSION.SIGN, value);
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<SystemSessionModel> fetchRangeOfUserId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(SystemSession.SYSTEM_SESSION.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<SystemSessionModel> fetchByUserId(Long... values) {
        return fetch(SystemSession.SYSTEM_SESSION.USER_ID, values);
    }

    /**
     * Fetch records that have <code>content BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<SystemSessionModel> fetchRangeOfContent(String lowerInclusive, String upperInclusive) {
        return fetchRange(SystemSession.SYSTEM_SESSION.CONTENT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>content IN (values)</code>
     */
    public List<SystemSessionModel> fetchByContent(String... values) {
        return fetch(SystemSession.SYSTEM_SESSION.CONTENT, values);
    }

    /**
     * Fetch records that have <code>expires BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<SystemSessionModel> fetchRangeOfExpires(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(SystemSession.SYSTEM_SESSION.EXPIRES, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>expires IN (values)</code>
     */
    public List<SystemSessionModel> fetchByExpires(Long... values) {
        return fetch(SystemSession.SYSTEM_SESSION.EXPIRES, values);
    }

    /**
     * Fetch records that have <code>modify_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<SystemSessionModel> fetchRangeOfModifyTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(SystemSession.SYSTEM_SESSION.MODIFY_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>modify_time IN (values)</code>
     */
    public List<SystemSessionModel> fetchByModifyTime(LocalDateTime... values) {
        return fetch(SystemSession.SYSTEM_SESSION.MODIFY_TIME, values);
    }

    /**
     * Fetch records that have <code>create_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<SystemSessionModel> fetchRangeOfCreateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(SystemSession.SYSTEM_SESSION.CREATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<SystemSessionModel> fetchByCreateTime(LocalDateTime... values) {
        return fetch(SystemSession.SYSTEM_SESSION.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>tenant_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<SystemSessionModel> fetchRangeOfTenantId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(SystemSession.SYSTEM_SESSION.TENANT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tenant_id IN (values)</code>
     */
    public List<SystemSessionModel> fetchByTenantId(Long... values) {
        return fetch(SystemSession.SYSTEM_SESSION.TENANT_ID, values);
    }
}

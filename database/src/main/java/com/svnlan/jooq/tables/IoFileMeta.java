/*
 * This file is generated by jOOQ.
 */
package com.svnlan.jooq.tables;


import com.svnlan.jooq.CloudDisk;
import com.svnlan.jooq.Indexes;
import com.svnlan.jooq.Keys;
import com.svnlan.jooq.tables.records.IoFileMetaRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row7;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 文件扩展表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IoFileMeta extends TableImpl<IoFileMetaRecord> {

    private static final long serialVersionUID = 798110738;

    /**
     * The reference instance of <code>cloud_disk.io_file_meta</code>
     */
    public static final IoFileMeta IO_FILE_META = new IoFileMeta();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<IoFileMetaRecord> getRecordType() {
        return IoFileMetaRecord.class;
    }

    /**
     * The column <code>cloud_disk.io_file_meta.id</code>.
     */
    public final TableField<IoFileMetaRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>cloud_disk.io_file_meta.file_id</code>. 文件id
     */
    public final TableField<IoFileMetaRecord, Long> FILE_ID = createField(DSL.name("file_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "文件id");

    /**
     * The column <code>cloud_disk.io_file_meta.key_string</code>. 存储key
     */
    public final TableField<IoFileMetaRecord, String> KEY_STRING = createField(DSL.name("key_string"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "存储key");

    /**
     * The column <code>cloud_disk.io_file_meta.value_text</code>. 对应值
     */
    public final TableField<IoFileMetaRecord, String> VALUE_TEXT = createField(DSL.name("value_text"), org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "对应值");

    /**
     * The column <code>cloud_disk.io_file_meta.create_time</code>. 创建时间
     */
    public final TableField<IoFileMetaRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "创建时间");

    /**
     * The column <code>cloud_disk.io_file_meta.modify_time</code>. 最后修改时间
     */
    public final TableField<IoFileMetaRecord, LocalDateTime> MODIFY_TIME = createField(DSL.name("modify_time"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "最后修改时间");

    /**
     * The column <code>cloud_disk.io_file_meta.tenant_id</code>. 租户id
     */
    public final TableField<IoFileMetaRecord, Long> TENANT_ID = createField(DSL.name("tenant_id"), org.jooq.impl.SQLDataType.BIGINT, this, "租户id");

    /**
     * Create a <code>cloud_disk.io_file_meta</code> table reference
     */
    public IoFileMeta() {
        this(DSL.name("io_file_meta"), null);
    }

    /**
     * Create an aliased <code>cloud_disk.io_file_meta</code> table reference
     */
    public IoFileMeta(String alias) {
        this(DSL.name(alias), IO_FILE_META);
    }

    /**
     * Create an aliased <code>cloud_disk.io_file_meta</code> table reference
     */
    public IoFileMeta(Name alias) {
        this(alias, IO_FILE_META);
    }

    private IoFileMeta(Name alias, Table<IoFileMetaRecord> aliased) {
        this(alias, aliased, null);
    }

    private IoFileMeta(Name alias, Table<IoFileMetaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("文件扩展表"));
    }

    public <O extends Record> IoFileMeta(Table<O> child, ForeignKey<O, IoFileMetaRecord> key) {
        super(child, key, IO_FILE_META);
    }

    @Override
    public Schema getSchema() {
        return CloudDisk.CLOUD_DISK;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.IO_FILE_META_IO_FILE_META_KEYS, Indexes.IO_FILE_META_PRIMARY);
    }

    @Override
    public Identity<IoFileMetaRecord, Long> getIdentity() {
        return Keys.IDENTITY_IO_FILE_META;
    }

    @Override
    public UniqueKey<IoFileMetaRecord> getPrimaryKey() {
        return Keys.KEY_IO_FILE_META_PRIMARY;
    }

    @Override
    public List<UniqueKey<IoFileMetaRecord>> getKeys() {
        return Arrays.<UniqueKey<IoFileMetaRecord>>asList(Keys.KEY_IO_FILE_META_PRIMARY);
    }

    @Override
    public IoFileMeta as(String alias) {
        return new IoFileMeta(DSL.name(alias), this);
    }

    @Override
    public IoFileMeta as(Name alias) {
        return new IoFileMeta(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public IoFileMeta rename(String name) {
        return new IoFileMeta(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public IoFileMeta rename(Name name) {
        return new IoFileMeta(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, Long, String, String, LocalDateTime, LocalDateTime, Long> fieldsRow() {
        return (Row7) super.fieldsRow();
    }
}

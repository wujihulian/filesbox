/*
 * This file is generated by jOOQ.
 */
package com.svnlan.jooq.tables;


import com.svnlan.jooq.CloudDisk;
import com.svnlan.jooq.Indexes;
import com.svnlan.jooq.Keys;
import com.svnlan.jooq.tables.records.CommonLabelRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row12;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 标签表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CommonLabel extends TableImpl<CommonLabelRecord> {

    private static final long serialVersionUID = -1456844491;

    /**
     * The reference instance of <code>cloud_disk.common_label</code>
     */
    public static final CommonLabel COMMON_LABEL = new CommonLabel();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CommonLabelRecord> getRecordType() {
        return CommonLabelRecord.class;
    }

    /**
     * The column <code>cloud_disk.common_label.id</code>.
     */
    public final TableField<CommonLabelRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>cloud_disk.common_label.user_id</code>. 用户id
     */
    public final TableField<CommonLabelRecord, Long> USER_ID = createField(DSL.name("user_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "用户id");

    /**
     * The column <code>cloud_disk.common_label.label_name</code>. 标签名称
     */
    public final TableField<CommonLabelRecord, String> LABEL_NAME = createField(DSL.name("label_name"), org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "标签名称");

    /**
     * The column <code>cloud_disk.common_label.label_en_name</code>. 英文名
     */
    public final TableField<CommonLabelRecord, String> LABEL_EN_NAME = createField(DSL.name("label_en_name"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "英文名");

    /**
     * The column <code>cloud_disk.common_label.en_name_simple</code>. 英文名
     */
    public final TableField<CommonLabelRecord, String> EN_NAME_SIMPLE = createField(DSL.name("en_name_simple"), org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "英文名");

    /**
     * The column <code>cloud_disk.common_label.status</code>. 状态，正常，删除
     */
    public final TableField<CommonLabelRecord, Integer> STATUS = createField(DSL.name("status"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "状态，正常，删除");

    /**
     * The column <code>cloud_disk.common_label.style</code>.
     */
    public final TableField<CommonLabelRecord, String> STYLE = createField(DSL.name("style"), org.jooq.impl.SQLDataType.VARCHAR(256).nullable(false), this, "");

    /**
     * The column <code>cloud_disk.common_label.sort</code>. 排序
     */
    public final TableField<CommonLabelRecord, Integer> SORT = createField(DSL.name("sort"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "排序");

    /**
     * The column <code>cloud_disk.common_label.tag_type</code>. 类型 1网盘标签，2资讯标签
     */
    public final TableField<CommonLabelRecord, Integer> TAG_TYPE = createField(DSL.name("tag_type"), org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.INTEGER)), this, "类型 1网盘标签，2资讯标签");

    /**
     * The column <code>cloud_disk.common_label.create_time</code>. 创建时间
     */
    public final TableField<CommonLabelRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "创建时间");

    /**
     * The column <code>cloud_disk.common_label.modify_time</code>. 修改时间
     */
    public final TableField<CommonLabelRecord, LocalDateTime> MODIFY_TIME = createField(DSL.name("modify_time"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "修改时间");

    /**
     * The column <code>cloud_disk.common_label.tenant_id</code>. 租户id
     */
    public final TableField<CommonLabelRecord, Long> TENANT_ID = createField(DSL.name("tenant_id"), org.jooq.impl.SQLDataType.BIGINT, this, "租户id");

    /**
     * Create a <code>cloud_disk.common_label</code> table reference
     */
    public CommonLabel() {
        this(DSL.name("common_label"), null);
    }

    /**
     * Create an aliased <code>cloud_disk.common_label</code> table reference
     */
    public CommonLabel(String alias) {
        this(DSL.name(alias), COMMON_LABEL);
    }

    /**
     * Create an aliased <code>cloud_disk.common_label</code> table reference
     */
    public CommonLabel(Name alias) {
        this(alias, COMMON_LABEL);
    }

    private CommonLabel(Name alias, Table<CommonLabelRecord> aliased) {
        this(alias, aliased, null);
    }

    private CommonLabel(Name alias, Table<CommonLabelRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("标签表"));
    }

    public <O extends Record> CommonLabel(Table<O> child, ForeignKey<O, CommonLabelRecord> key) {
        super(child, key, COMMON_LABEL);
    }

    @Override
    public Schema getSchema() {
        return CloudDisk.CLOUD_DISK;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.COMMON_LABEL_PRIMARY);
    }

    @Override
    public Identity<CommonLabelRecord, Long> getIdentity() {
        return Keys.IDENTITY_COMMON_LABEL;
    }

    @Override
    public UniqueKey<CommonLabelRecord> getPrimaryKey() {
        return Keys.KEY_COMMON_LABEL_PRIMARY;
    }

    @Override
    public List<UniqueKey<CommonLabelRecord>> getKeys() {
        return Arrays.<UniqueKey<CommonLabelRecord>>asList(Keys.KEY_COMMON_LABEL_PRIMARY);
    }

    @Override
    public CommonLabel as(String alias) {
        return new CommonLabel(DSL.name(alias), this);
    }

    @Override
    public CommonLabel as(Name alias) {
        return new CommonLabel(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CommonLabel rename(String name) {
        return new CommonLabel(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public CommonLabel rename(Name name) {
        return new CommonLabel(name, null);
    }

    // -------------------------------------------------------------------------
    // Row12 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row12<Long, Long, String, String, String, Integer, String, Integer, Integer, LocalDateTime, LocalDateTime, Long> fieldsRow() {
        return (Row12) super.fieldsRow();
    }
}

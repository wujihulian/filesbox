/*
 * This file is generated by jOOQ.
 */
package com.svnlan.jooq.tables.records;


import com.svnlan.jooq.tables.Comment;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 通用评论表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CommentRecord extends UpdatableRecordImpl<CommentRecord> implements Record12<Long, Long, Long, Integer, Long, String, Integer, Integer, Integer, LocalDateTime, LocalDateTime, Long> {

    private static final long serialVersionUID = 1167120924;

    /**
     * Setter for <code>cloud_disk.comment.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>cloud_disk.comment.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>cloud_disk.comment.pid</code>. 该评论上级ID
     */
    public void setPid(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>cloud_disk.comment.pid</code>. 该评论上级ID
     */
    public Long getPid() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>cloud_disk.comment.user_id</code>. 评论用户id
     */
    public void setUserId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>cloud_disk.comment.user_id</code>. 评论用户id
     */
    public Long getUserId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>cloud_disk.comment.target_type</code>. 评论对象类型1分享2文件3文章4......
     */
    public void setTargetType(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>cloud_disk.comment.target_type</code>. 评论对象类型1分享2文件3文章4......
     */
    public Integer getTargetType() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>cloud_disk.comment.target_id</code>. 评论对象id
     */
    public void setTargetId(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>cloud_disk.comment.target_id</code>. 评论对象id
     */
    public Long getTargetId() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>cloud_disk.comment.content</code>. 评论内容
     */
    public void setContent(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>cloud_disk.comment.content</code>. 评论内容
     */
    public String getContent() {
        return (String) get(5);
    }

    /**
     * Setter for <code>cloud_disk.comment.praise_count</code>. 点赞统计
     */
    public void setPraiseCount(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>cloud_disk.comment.praise_count</code>. 点赞统计
     */
    public Integer getPraiseCount() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>cloud_disk.comment.comment_count</code>. 评论统计
     */
    public void setCommentCount(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>cloud_disk.comment.comment_count</code>. 评论统计
     */
    public Integer getCommentCount() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>cloud_disk.comment.status</code>. 状态 1正常 2异常 3其他
     */
    public void setStatus(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>cloud_disk.comment.status</code>. 状态 1正常 2异常 3其他
     */
    public Integer getStatus() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>cloud_disk.comment.modify_time</code>. 最后修改时间
     */
    public void setModifyTime(LocalDateTime value) {
        set(9, value);
    }

    /**
     * Getter for <code>cloud_disk.comment.modify_time</code>. 最后修改时间
     */
    public LocalDateTime getModifyTime() {
        return (LocalDateTime) get(9);
    }

    /**
     * Setter for <code>cloud_disk.comment.create_time</code>. 创建时间
     */
    public void setCreateTime(LocalDateTime value) {
        set(10, value);
    }

    /**
     * Getter for <code>cloud_disk.comment.create_time</code>. 创建时间
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(10);
    }

    /**
     * Setter for <code>cloud_disk.comment.tenant_id</code>. 租户id
     */
    public void setTenantId(Long value) {
        set(11, value);
    }

    /**
     * Getter for <code>cloud_disk.comment.tenant_id</code>. 租户id
     */
    public Long getTenantId() {
        return (Long) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row12<Long, Long, Long, Integer, Long, String, Integer, Integer, Integer, LocalDateTime, LocalDateTime, Long> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    @Override
    public Row12<Long, Long, Long, Integer, Long, String, Integer, Integer, Integer, LocalDateTime, LocalDateTime, Long> valuesRow() {
        return (Row12) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Comment.COMMENT.ID;
    }

    @Override
    public Field<Long> field2() {
        return Comment.COMMENT.PID;
    }

    @Override
    public Field<Long> field3() {
        return Comment.COMMENT.USER_ID;
    }

    @Override
    public Field<Integer> field4() {
        return Comment.COMMENT.TARGET_TYPE;
    }

    @Override
    public Field<Long> field5() {
        return Comment.COMMENT.TARGET_ID;
    }

    @Override
    public Field<String> field6() {
        return Comment.COMMENT.CONTENT;
    }

    @Override
    public Field<Integer> field7() {
        return Comment.COMMENT.PRAISE_COUNT;
    }

    @Override
    public Field<Integer> field8() {
        return Comment.COMMENT.COMMENT_COUNT;
    }

    @Override
    public Field<Integer> field9() {
        return Comment.COMMENT.STATUS;
    }

    @Override
    public Field<LocalDateTime> field10() {
        return Comment.COMMENT.MODIFY_TIME;
    }

    @Override
    public Field<LocalDateTime> field11() {
        return Comment.COMMENT.CREATE_TIME;
    }

    @Override
    public Field<Long> field12() {
        return Comment.COMMENT.TENANT_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getPid();
    }

    @Override
    public Long component3() {
        return getUserId();
    }

    @Override
    public Integer component4() {
        return getTargetType();
    }

    @Override
    public Long component5() {
        return getTargetId();
    }

    @Override
    public String component6() {
        return getContent();
    }

    @Override
    public Integer component7() {
        return getPraiseCount();
    }

    @Override
    public Integer component8() {
        return getCommentCount();
    }

    @Override
    public Integer component9() {
        return getStatus();
    }

    @Override
    public LocalDateTime component10() {
        return getModifyTime();
    }

    @Override
    public LocalDateTime component11() {
        return getCreateTime();
    }

    @Override
    public Long component12() {
        return getTenantId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getPid();
    }

    @Override
    public Long value3() {
        return getUserId();
    }

    @Override
    public Integer value4() {
        return getTargetType();
    }

    @Override
    public Long value5() {
        return getTargetId();
    }

    @Override
    public String value6() {
        return getContent();
    }

    @Override
    public Integer value7() {
        return getPraiseCount();
    }

    @Override
    public Integer value8() {
        return getCommentCount();
    }

    @Override
    public Integer value9() {
        return getStatus();
    }

    @Override
    public LocalDateTime value10() {
        return getModifyTime();
    }

    @Override
    public LocalDateTime value11() {
        return getCreateTime();
    }

    @Override
    public Long value12() {
        return getTenantId();
    }

    @Override
    public CommentRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public CommentRecord value2(Long value) {
        setPid(value);
        return this;
    }

    @Override
    public CommentRecord value3(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public CommentRecord value4(Integer value) {
        setTargetType(value);
        return this;
    }

    @Override
    public CommentRecord value5(Long value) {
        setTargetId(value);
        return this;
    }

    @Override
    public CommentRecord value6(String value) {
        setContent(value);
        return this;
    }

    @Override
    public CommentRecord value7(Integer value) {
        setPraiseCount(value);
        return this;
    }

    @Override
    public CommentRecord value8(Integer value) {
        setCommentCount(value);
        return this;
    }

    @Override
    public CommentRecord value9(Integer value) {
        setStatus(value);
        return this;
    }

    @Override
    public CommentRecord value10(LocalDateTime value) {
        setModifyTime(value);
        return this;
    }

    @Override
    public CommentRecord value11(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public CommentRecord value12(Long value) {
        setTenantId(value);
        return this;
    }

    @Override
    public CommentRecord values(Long value1, Long value2, Long value3, Integer value4, Long value5, String value6, Integer value7, Integer value8, Integer value9, LocalDateTime value10, LocalDateTime value11, Long value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CommentRecord
     */
    public CommentRecord() {
        super(Comment.COMMENT);
    }

    /**
     * Create a detached, initialised CommentRecord
     */
    public CommentRecord(Long id, Long pid, Long userId, Integer targetType, Long targetId, String content, Integer praiseCount, Integer commentCount, Integer status, LocalDateTime modifyTime, LocalDateTime createTime, Long tenantId) {
        super(Comment.COMMENT);

        set(0, id);
        set(1, pid);
        set(2, userId);
        set(3, targetType);
        set(4, targetId);
        set(5, content);
        set(6, praiseCount);
        set(7, commentCount);
        set(8, status);
        set(9, modifyTime);
        set(10, createTime);
        set(11, tenantId);
    }
}

/*
 * This file is generated by jOOQ.
 */
package com.svnlan.jooq.tables;


import com.svnlan.jooq.CloudDisk;
import com.svnlan.jooq.Indexes;
import com.svnlan.jooq.Keys;
import com.svnlan.jooq.tables.records.GroupsRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row12;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 群组表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Groups extends TableImpl<GroupsRecord> {

    private static final long serialVersionUID = -1743963560;

    /**
     * The reference instance of <code>cloud_disk.groups</code>
     */
    public static final Groups GROUPS = new Groups();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GroupsRecord> getRecordType() {
        return GroupsRecord.class;
    }

    /**
     * The column <code>cloud_disk.groups.id</code>.
     */
    public final TableField<GroupsRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>cloud_disk.groups.name</code>. 群组名
     */
    public final TableField<GroupsRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "群组名");

    /**
     * The column <code>cloud_disk.groups.parent_id</code>. 父群组id
     */
    public final TableField<GroupsRecord, Long> PARENT_ID = createField(DSL.name("parent_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "父群组id");

    /**
     * The column <code>cloud_disk.groups.parent_level</code>. 父路径id; 例如:  ,2,5,10,
     */
    public final TableField<GroupsRecord, String> PARENT_LEVEL = createField(DSL.name("parent_level"), org.jooq.impl.SQLDataType.VARCHAR(1000).nullable(false), this, "父路径id; 例如:  ,2,5,10,");

    /**
     * The column <code>cloud_disk.groups.extra_field</code>. 扩展字段
     */
    public final TableField<GroupsRecord, String> EXTRA_FIELD = createField(DSL.name("extra_field"), org.jooq.impl.SQLDataType.VARCHAR(100), this, "扩展字段");

    /**
     * The column <code>cloud_disk.groups.sort</code>. 排序
     */
    public final TableField<GroupsRecord, Integer> SORT = createField(DSL.name("sort"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "排序");

    /**
     * The column <code>cloud_disk.groups.size_max</code>. 群组存储空间大小(GB) 0-不限制
     */
    public final TableField<GroupsRecord, Double> SIZE_MAX = createField(DSL.name("size_max"), org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "群组存储空间大小(GB) 0-不限制");

    /**
     * The column <code>cloud_disk.groups.size_use</code>. 已使用大小(byte)
     */
    public final TableField<GroupsRecord, Long> SIZE_USE = createField(DSL.name("size_use"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "已使用大小(byte)");

    /**
     * The column <code>cloud_disk.groups.status</code>. 启用状态 0-未启用 1-启用 2-删除
     */
    public final TableField<GroupsRecord, Integer> STATUS = createField(DSL.name("status"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.INTEGER)), this, "启用状态 0-未启用 1-启用 2-删除");

    /**
     * The column <code>cloud_disk.groups.modify_time</code>. 最后修改时间
     */
    public final TableField<GroupsRecord, LocalDateTime> MODIFY_TIME = createField(DSL.name("modify_time"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "最后修改时间");

    /**
     * The column <code>cloud_disk.groups.create_time</code>. 创建时间
     */
    public final TableField<GroupsRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "创建时间");

    /**
     * The column <code>cloud_disk.groups.tenant_id</code>. 租户id
     */
    public final TableField<GroupsRecord, Long> TENANT_ID = createField(DSL.name("tenant_id"), org.jooq.impl.SQLDataType.BIGINT, this, "租户id");

    /**
     * Create a <code>cloud_disk.groups</code> table reference
     */
    public Groups() {
        this(DSL.name("groups"), null);
    }

    /**
     * Create an aliased <code>cloud_disk.groups</code> table reference
     */
    public Groups(String alias) {
        this(DSL.name(alias), GROUPS);
    }

    /**
     * Create an aliased <code>cloud_disk.groups</code> table reference
     */
    public Groups(Name alias) {
        this(alias, GROUPS);
    }

    private Groups(Name alias, Table<GroupsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Groups(Name alias, Table<GroupsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("群组表"));
    }

    public <O extends Record> Groups(Table<O> child, ForeignKey<O, GroupsRecord> key) {
        super(child, key, GROUPS);
    }

    @Override
    public Schema getSchema() {
        return CloudDisk.CLOUD_DISK;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.GROUPS_GROUP_NAME, Indexes.GROUPS_GROUPS_SORT, Indexes.GROUPS_PRIMARY);
    }

    @Override
    public Identity<GroupsRecord, Long> getIdentity() {
        return Keys.IDENTITY_GROUPS;
    }

    @Override
    public UniqueKey<GroupsRecord> getPrimaryKey() {
        return Keys.KEY_GROUPS_PRIMARY;
    }

    @Override
    public List<UniqueKey<GroupsRecord>> getKeys() {
        return Arrays.<UniqueKey<GroupsRecord>>asList(Keys.KEY_GROUPS_PRIMARY);
    }

    @Override
    public Groups as(String alias) {
        return new Groups(DSL.name(alias), this);
    }

    @Override
    public Groups as(Name alias) {
        return new Groups(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Groups rename(String name) {
        return new Groups(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Groups rename(Name name) {
        return new Groups(name, null);
    }

    // -------------------------------------------------------------------------
    // Row12 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row12<Long, String, Long, String, String, Integer, Double, Long, Integer, LocalDateTime, LocalDateTime, Long> fieldsRow() {
        return (Row12) super.fieldsRow();
    }
}

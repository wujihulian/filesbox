/*
 * This file is generated by jOOQ.
 */
package com.svnlan.jooq.tables.records;


import com.svnlan.jooq.tables.NoticeUser;

import java.time.LocalDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 通知用户关联表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NoticeUserRecord extends UpdatableRecordImpl<NoticeUserRecord> implements Record7<Long, Long, Long, Integer, LocalDateTime, LocalDateTime, Long> {

    private static final long serialVersionUID = -750360989;

    /**
     * Setter for <code>cloud_disk.notice_user.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>cloud_disk.notice_user.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>cloud_disk.notice_user.user_id</code>. 用户id
     */
    public void setUserId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>cloud_disk.notice_user.user_id</code>. 用户id
     */
    public Long getUserId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>cloud_disk.notice_user.notice_id</code>. 通知id集合
     */
    public void setNoticeId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>cloud_disk.notice_user.notice_id</code>. 通知id集合
     */
    public Long getNoticeId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>cloud_disk.notice_user.is_read</code>. 是否已读 0 未读 1 已读
     */
    public void setIsRead(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>cloud_disk.notice_user.is_read</code>. 是否已读 0 未读 1 已读
     */
    public Integer getIsRead() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>cloud_disk.notice_user.create_time</code>. 创建时间
     */
    public void setCreateTime(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>cloud_disk.notice_user.create_time</code>. 创建时间
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>cloud_disk.notice_user.modify_time</code>. 更新时间
     */
    public void setModifyTime(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>cloud_disk.notice_user.modify_time</code>. 更新时间
     */
    public LocalDateTime getModifyTime() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>cloud_disk.notice_user.tenant_id</code>. 租户id
     */
    public void setTenantId(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>cloud_disk.notice_user.tenant_id</code>. 租户id
     */
    public Long getTenantId() {
        return (Long) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, Long, Long, Integer, LocalDateTime, LocalDateTime, Long> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, Long, Long, Integer, LocalDateTime, LocalDateTime, Long> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return NoticeUser.NOTICE_USER.ID;
    }

    @Override
    public Field<Long> field2() {
        return NoticeUser.NOTICE_USER.USER_ID;
    }

    @Override
    public Field<Long> field3() {
        return NoticeUser.NOTICE_USER.NOTICE_ID;
    }

    @Override
    public Field<Integer> field4() {
        return NoticeUser.NOTICE_USER.IS_READ;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return NoticeUser.NOTICE_USER.CREATE_TIME;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return NoticeUser.NOTICE_USER.MODIFY_TIME;
    }

    @Override
    public Field<Long> field7() {
        return NoticeUser.NOTICE_USER.TENANT_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getUserId();
    }

    @Override
    public Long component3() {
        return getNoticeId();
    }

    @Override
    public Integer component4() {
        return getIsRead();
    }

    @Override
    public LocalDateTime component5() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime component6() {
        return getModifyTime();
    }

    @Override
    public Long component7() {
        return getTenantId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getUserId();
    }

    @Override
    public Long value3() {
        return getNoticeId();
    }

    @Override
    public Integer value4() {
        return getIsRead();
    }

    @Override
    public LocalDateTime value5() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime value6() {
        return getModifyTime();
    }

    @Override
    public Long value7() {
        return getTenantId();
    }

    @Override
    public NoticeUserRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public NoticeUserRecord value2(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public NoticeUserRecord value3(Long value) {
        setNoticeId(value);
        return this;
    }

    @Override
    public NoticeUserRecord value4(Integer value) {
        setIsRead(value);
        return this;
    }

    @Override
    public NoticeUserRecord value5(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public NoticeUserRecord value6(LocalDateTime value) {
        setModifyTime(value);
        return this;
    }

    @Override
    public NoticeUserRecord value7(Long value) {
        setTenantId(value);
        return this;
    }

    @Override
    public NoticeUserRecord values(Long value1, Long value2, Long value3, Integer value4, LocalDateTime value5, LocalDateTime value6, Long value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NoticeUserRecord
     */
    public NoticeUserRecord() {
        super(NoticeUser.NOTICE_USER);
    }

    /**
     * Create a detached, initialised NoticeUserRecord
     */
    public NoticeUserRecord(Long id, Long userId, Long noticeId, Integer isRead, LocalDateTime createTime, LocalDateTime modifyTime, Long tenantId) {
        super(NoticeUser.NOTICE_USER);

        set(0, id);
        set(1, userId);
        set(2, noticeId);
        set(3, isRead);
        set(4, createTime);
        set(5, modifyTime);
        set(6, tenantId);
    }
}

/*
 * This file is generated by jOOQ.
 */
package com.svnlan.jooq.tables.daos;


import com.svnlan.jooq.tables.ShareReport;
import com.svnlan.jooq.tables.pojos.ShareReportModel;
import com.svnlan.jooq.tables.records.ShareReportRecord;

import java.time.LocalDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * 分享举报表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ShareReportDao extends DAOImpl<ShareReportRecord, ShareReportModel, Long> {

    /**
     * Create a new ShareReportDao without any configuration
     */
    public ShareReportDao() {
        super(ShareReport.SHARE_REPORT, ShareReportModel.class);
    }

    /**
     * Create a new ShareReportDao with an attached configuration
     */
    public ShareReportDao(Configuration configuration) {
        super(ShareReport.SHARE_REPORT, ShareReportModel.class, configuration);
    }

    @Override
    public Long getId(ShareReportModel object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ShareReportModel> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(ShareReport.SHARE_REPORT.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<ShareReportModel> fetchById(Long... values) {
        return fetch(ShareReport.SHARE_REPORT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public ShareReportModel fetchOneById(Long value) {
        return fetchOne(ShareReport.SHARE_REPORT.ID, value);
    }

    /**
     * Fetch records that have <code>share_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ShareReportModel> fetchRangeOfShareId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(ShareReport.SHARE_REPORT.SHARE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>share_id IN (values)</code>
     */
    public List<ShareReportModel> fetchByShareId(Long... values) {
        return fetch(ShareReport.SHARE_REPORT.SHARE_ID, values);
    }

    /**
     * Fetch records that have <code>title BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ShareReportModel> fetchRangeOfTitle(String lowerInclusive, String upperInclusive) {
        return fetchRange(ShareReport.SHARE_REPORT.TITLE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>title IN (values)</code>
     */
    public List<ShareReportModel> fetchByTitle(String... values) {
        return fetch(ShareReport.SHARE_REPORT.TITLE, values);
    }

    /**
     * Fetch records that have <code>source_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ShareReportModel> fetchRangeOfSourceId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(ShareReport.SHARE_REPORT.SOURCE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>source_id IN (values)</code>
     */
    public List<ShareReportModel> fetchBySourceId(Long... values) {
        return fetch(ShareReport.SHARE_REPORT.SOURCE_ID, values);
    }

    /**
     * Fetch records that have <code>file_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ShareReportModel> fetchRangeOfFileId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(ShareReport.SHARE_REPORT.FILE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>file_id IN (values)</code>
     */
    public List<ShareReportModel> fetchByFileId(Long... values) {
        return fetch(ShareReport.SHARE_REPORT.FILE_ID, values);
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ShareReportModel> fetchRangeOfUserId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(ShareReport.SHARE_REPORT.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<ShareReportModel> fetchByUserId(Long... values) {
        return fetch(ShareReport.SHARE_REPORT.USER_ID, values);
    }

    /**
     * Fetch records that have <code>report_type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ShareReportModel> fetchRangeOfReportType(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(ShareReport.SHARE_REPORT.REPORT_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>report_type IN (values)</code>
     */
    public List<ShareReportModel> fetchByReportType(Integer... values) {
        return fetch(ShareReport.SHARE_REPORT.REPORT_TYPE, values);
    }

    /**
     * Fetch records that have <code>reason BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ShareReportModel> fetchRangeOfReason(String lowerInclusive, String upperInclusive) {
        return fetchRange(ShareReport.SHARE_REPORT.REASON, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>reason IN (values)</code>
     */
    public List<ShareReportModel> fetchByReason(String... values) {
        return fetch(ShareReport.SHARE_REPORT.REASON, values);
    }

    /**
     * Fetch records that have <code>status BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ShareReportModel> fetchRangeOfStatus(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(ShareReport.SHARE_REPORT.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<ShareReportModel> fetchByStatus(Integer... values) {
        return fetch(ShareReport.SHARE_REPORT.STATUS, values);
    }

    /**
     * Fetch records that have <code>create_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ShareReportModel> fetchRangeOfCreateTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(ShareReport.SHARE_REPORT.CREATE_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<ShareReportModel> fetchByCreateTime(LocalDateTime... values) {
        return fetch(ShareReport.SHARE_REPORT.CREATE_TIME, values);
    }

    /**
     * Fetch records that have <code>modify_time BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ShareReportModel> fetchRangeOfModifyTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(ShareReport.SHARE_REPORT.MODIFY_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>modify_time IN (values)</code>
     */
    public List<ShareReportModel> fetchByModifyTime(LocalDateTime... values) {
        return fetch(ShareReport.SHARE_REPORT.MODIFY_TIME, values);
    }

    /**
     * Fetch records that have <code>tenant_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ShareReportModel> fetchRangeOfTenantId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(ShareReport.SHARE_REPORT.TENANT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tenant_id IN (values)</code>
     */
    public List<ShareReportModel> fetchByTenantId(Long... values) {
        return fetch(ShareReport.SHARE_REPORT.TENANT_ID, values);
    }
}

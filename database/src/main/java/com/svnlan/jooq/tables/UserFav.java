/*
 * This file is generated by jOOQ.
 */
package com.svnlan.jooq.tables;


import com.svnlan.jooq.CloudDisk;
import com.svnlan.jooq.Indexes;
import com.svnlan.jooq.Keys;
import com.svnlan.jooq.tables.records.UserFavRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row10;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 用户文档标签表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserFav extends TableImpl<UserFavRecord> {

    private static final long serialVersionUID = -580255682;

    /**
     * The reference instance of <code>cloud_disk.user_fav</code>
     */
    public static final UserFav USER_FAV = new UserFav();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserFavRecord> getRecordType() {
        return UserFavRecord.class;
    }

    /**
     * The column <code>cloud_disk.user_fav.id</code>.
     */
    public final TableField<UserFavRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>cloud_disk.user_fav.user_id</code>. 用户id
     */
    public final TableField<UserFavRecord, Long> USER_ID = createField(DSL.name("user_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "用户id");

    /**
     * The column <code>cloud_disk.user_fav.tag_id</code>. 标签id,收藏则为0
     */
    public final TableField<UserFavRecord, Integer> TAG_ID = createField(DSL.name("tag_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "标签id,收藏则为0");

    /**
     * The column <code>cloud_disk.user_fav.name</code>. 收藏名称
     */
    public final TableField<UserFavRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "收藏名称");

    /**
     * The column <code>cloud_disk.user_fav.path</code>. 收藏路径,tag时则为sourceID
     */
    public final TableField<UserFavRecord, String> PATH = createField(DSL.name("path"), org.jooq.impl.SQLDataType.VARCHAR(2048).nullable(false), this, "收藏路径,tag时则为sourceID");

    /**
     * The column <code>cloud_disk.user_fav.type</code>. source/path/info
     */
    public final TableField<UserFavRecord, String> TYPE = createField(DSL.name("type"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "source/path/info");

    /**
     * The column <code>cloud_disk.user_fav.sort</code>. 排序
     */
    public final TableField<UserFavRecord, Integer> SORT = createField(DSL.name("sort"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "排序");

    /**
     * The column <code>cloud_disk.user_fav.modify_time</code>. 最后修改时间
     */
    public final TableField<UserFavRecord, LocalDateTime> MODIFY_TIME = createField(DSL.name("modify_time"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "最后修改时间");

    /**
     * The column <code>cloud_disk.user_fav.create_time</code>. 创建时间
     */
    public final TableField<UserFavRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "创建时间");

    /**
     * The column <code>cloud_disk.user_fav.tenant_id</code>. 租户id
     */
    public final TableField<UserFavRecord, Long> TENANT_ID = createField(DSL.name("tenant_id"), org.jooq.impl.SQLDataType.BIGINT, this, "租户id");

    /**
     * Create a <code>cloud_disk.user_fav</code> table reference
     */
    public UserFav() {
        this(DSL.name("user_fav"), null);
    }

    /**
     * Create an aliased <code>cloud_disk.user_fav</code> table reference
     */
    public UserFav(String alias) {
        this(DSL.name(alias), USER_FAV);
    }

    /**
     * Create an aliased <code>cloud_disk.user_fav</code> table reference
     */
    public UserFav(Name alias) {
        this(alias, USER_FAV);
    }

    private UserFav(Name alias, Table<UserFavRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserFav(Name alias, Table<UserFavRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("用户文档标签表"));
    }

    public <O extends Record> UserFav(Table<O> child, ForeignKey<O, UserFavRecord> key) {
        super(child, key, USER_FAV);
    }

    @Override
    public Schema getSchema() {
        return CloudDisk.CLOUD_DISK;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USER_FAV_PRIMARY, Indexes.USER_FAV_USER_FAV_NAME, Indexes.USER_FAV_USER_FAV_PATH, Indexes.USER_FAV_USER_FAV_SORT, Indexes.USER_FAV_USER_FAV_TYPE);
    }

    @Override
    public Identity<UserFavRecord, Long> getIdentity() {
        return Keys.IDENTITY_USER_FAV;
    }

    @Override
    public UniqueKey<UserFavRecord> getPrimaryKey() {
        return Keys.KEY_USER_FAV_PRIMARY;
    }

    @Override
    public List<UniqueKey<UserFavRecord>> getKeys() {
        return Arrays.<UniqueKey<UserFavRecord>>asList(Keys.KEY_USER_FAV_PRIMARY);
    }

    @Override
    public UserFav as(String alias) {
        return new UserFav(DSL.name(alias), this);
    }

    @Override
    public UserFav as(Name alias) {
        return new UserFav(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserFav rename(String name) {
        return new UserFav(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserFav rename(Name name) {
        return new UserFav(name, null);
    }

    // -------------------------------------------------------------------------
    // Row10 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row10<Long, Long, Integer, String, String, String, Integer, LocalDateTime, LocalDateTime, Long> fieldsRow() {
        return (Row10) super.fieldsRow();
    }
}

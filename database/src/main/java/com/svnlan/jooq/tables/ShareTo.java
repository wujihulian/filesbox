/*
 * This file is generated by jOOQ.
 */
package com.svnlan.jooq.tables;


import com.svnlan.jooq.CloudDisk;
import com.svnlan.jooq.Indexes;
import com.svnlan.jooq.Keys;
import com.svnlan.jooq.tables.records.ShareToRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row9;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 分享给指定用户(协作)
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ShareTo extends TableImpl<ShareToRecord> {

    private static final long serialVersionUID = 1762620830;

    /**
     * The reference instance of <code>cloud_disk.share_to</code>
     */
    public static final ShareTo SHARE_TO = new ShareTo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ShareToRecord> getRecordType() {
        return ShareToRecord.class;
    }

    /**
     * The column <code>cloud_disk.share_to.id</code>.
     */
    public final TableField<ShareToRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>cloud_disk.share_to.share_id</code>. 分享id
     */
    public final TableField<ShareToRecord, Long> SHARE_ID = createField(DSL.name("share_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "分享id");

    /**
     * The column <code>cloud_disk.share_to.target_type</code>. 分享给的对象,1用户,2部门
     */
    public final TableField<ShareToRecord, Integer> TARGET_TYPE = createField(DSL.name("target_type"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "分享给的对象,1用户,2部门");

    /**
     * The column <code>cloud_disk.share_to.target_id</code>. 所属对象id
     */
    public final TableField<ShareToRecord, Long> TARGET_ID = createField(DSL.name("target_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "所属对象id");

    /**
     * The column <code>cloud_disk.share_to.auth_id</code>. 权限组id；自定义权限则为0
     */
    public final TableField<ShareToRecord, Integer> AUTH_ID = createField(DSL.name("auth_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "权限组id；自定义权限则为0");

    /**
     * The column <code>cloud_disk.share_to.auth_define</code>. 自定义权限，4字节占位
     */
    public final TableField<ShareToRecord, Integer> AUTH_DEFINE = createField(DSL.name("auth_define"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "自定义权限，4字节占位");

    /**
     * The column <code>cloud_disk.share_to.create_time</code>. 创建时间
     */
    public final TableField<ShareToRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "创建时间");

    /**
     * The column <code>cloud_disk.share_to.modify_time</code>. 最后修改时间
     */
    public final TableField<ShareToRecord, LocalDateTime> MODIFY_TIME = createField(DSL.name("modify_time"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "最后修改时间");

    /**
     * The column <code>cloud_disk.share_to.tenant_id</code>. 租户id
     */
    public final TableField<ShareToRecord, Long> TENANT_ID = createField(DSL.name("tenant_id"), org.jooq.impl.SQLDataType.BIGINT, this, "租户id");

    /**
     * Create a <code>cloud_disk.share_to</code> table reference
     */
    public ShareTo() {
        this(DSL.name("share_to"), null);
    }

    /**
     * Create an aliased <code>cloud_disk.share_to</code> table reference
     */
    public ShareTo(String alias) {
        this(DSL.name(alias), SHARE_TO);
    }

    /**
     * Create an aliased <code>cloud_disk.share_to</code> table reference
     */
    public ShareTo(Name alias) {
        this(alias, SHARE_TO);
    }

    private ShareTo(Name alias, Table<ShareToRecord> aliased) {
        this(alias, aliased, null);
    }

    private ShareTo(Name alias, Table<ShareToRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("分享给指定用户(协作)"));
    }

    public <O extends Record> ShareTo(Table<O> child, ForeignKey<O, ShareToRecord> key) {
        super(child, key, SHARE_TO);
    }

    @Override
    public Schema getSchema() {
        return CloudDisk.CLOUD_DISK;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SHARE_TO_PRIMARY);
    }

    @Override
    public Identity<ShareToRecord, Long> getIdentity() {
        return Keys.IDENTITY_SHARE_TO;
    }

    @Override
    public UniqueKey<ShareToRecord> getPrimaryKey() {
        return Keys.KEY_SHARE_TO_PRIMARY;
    }

    @Override
    public List<UniqueKey<ShareToRecord>> getKeys() {
        return Arrays.<UniqueKey<ShareToRecord>>asList(Keys.KEY_SHARE_TO_PRIMARY);
    }

    @Override
    public ShareTo as(String alias) {
        return new ShareTo(DSL.name(alias), this);
    }

    @Override
    public ShareTo as(Name alias) {
        return new ShareTo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ShareTo rename(String name) {
        return new ShareTo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ShareTo rename(Name name) {
        return new ShareTo(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, Long, Integer, Long, Integer, Integer, LocalDateTime, LocalDateTime, Long> fieldsRow() {
        return (Row9) super.fieldsRow();
    }
}

<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.svnlan.home.dao.ExplorerOperationsDao">

    <select id="getAllSourceList" resultType="com.svnlan.home.vo.HomeExplorerShareDetailVO">
        select s.sourceID, s.isFolder, s.name, s.createTime, s.parentID, s.parentLevel
        from io_source s
        where 1 = 1
        <if test=" sourceID != null and sourceID !=''"> and s.parentID = #{sourceID}</if>
        order by s.createTime asc
    </select>

    <update id="batchUpdateLevel" >
        update io_source
        <trim prefix="set" suffixOverrides=",">
            <trim prefix=" parentLevel = case " suffix=" end ">
                <foreach collection="list" item="item">
                    <if test="item.parentLevel != null">
                        when sourceID = #{item.sourceID} then #{item.parentLevel}
                    </if>
                </foreach>
            </trim>
        </trim>
        where  sourceID in
        <foreach collection="list" item="item" open="(" close=")" separator=",">
            #{item.sourceID}
        </foreach>
    </update>

    <select id="getSourceListByLevelToContSize" resultType="com.svnlan.home.domain.IOSource">
        select sourceID, `type`, targetType, isFolder, `name`, fileType, fileID, `size`, parentID, parentLevel
        ,convertSize,thumbSize, storageID
        from io_source
        where isFolder= 0
        <if test="status == 1">and isDelete=1</if>
        and parentLevel like  concat(#{parentLevel},'%') order by parentLevel desc
    </select>

    <update id="batchUpdateSizeByCountSize" >
        update `io_source`
        <trim prefix="set" suffixOverrides=",">
            <trim prefix=" `size` = case " suffix=" end ">
                <foreach collection="list" item="item">
                    <if test="item.size != null">
                        when `sourceID` = #{item.sourceID} then #{item.size}
                    </if>
                </foreach>
            </trim>
        </trim>
        where  `sourceID` in
        <foreach collection="list" item="item" open="(" close=")" separator=",">
            #{item.sourceID}
        </foreach>
    </update>
</mapper>
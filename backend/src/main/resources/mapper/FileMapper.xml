<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.svnlan.home.dao.IoFileDao" >

    <select id="getFileAttachment" resultType="com.svnlan.home.domain.CommonSource">
        select f.fileID, s.`name` , f.hashMd5, f.size, f.path, s.fileType, m.`value`, s.parentID, s.parentLevel, s.sourceID
        ,f.is_preview isPreview, f.is_m3u8 isM3u8, f.app_preview appPreview, f.is_h264_preview isH264Preview, s.targetID userID, f.createTime
        from io_file f
        left join io_source s ON f.fileID = s.fileID
        left join io_file_meta m ON f.fileID = m.fileID and m.`key` = 'fileInfoMore'
        where s.sourceID = #{sourceID}
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="fileID" >
        insert into io_file(`name`, `size`, ioType, path, hashSimple, hashMd5, linkCount, createTime, modifyTime,is_preview,app_preview,is_h264_preview,is_m3u8,fileName
        ,convertSize,thumbSize,user_id)
        values (#{name}, #{size}, #{ioType}, #{path}, #{hashSimple}, #{hashMd5}, 0, unix_timestamp(), unix_timestamp(), IFNULL(#{isPreview}, 0 ), IFNULL(#{appPreview}, 0 ), IFNULL(#{isH264Preview}, 0 )
        , IFNULL(#{isM3u8}, 0 ), IFNULL(#{fileName}, ''), IFNULL(#{convertSize}, 0 ), IFNULL(#{thumbSize}, 0 ), IFNULL(#{userId}, 0 )
        )
    </insert>
    <insert id="batchInsert" useGeneratedKeys="true" keyProperty="fileID">
        insert into io_file(`name`, `size`, ioType, path, hashSimple, hashMd5, linkCount, createTime, modifyTime,is_preview,app_preview,is_h264_preview,is_m3u8,fileName
        ,convertSize,thumbSize,user_id)
        values
        <foreach collection="list" index="index" item="item" open="" separator="," close="">
            (#{item.name}, #{item.size}, #{item.ioType}, #{item.path}, #{item.hashSimple}, #{item.hashMd5}, 0, unix_timestamp(), unix_timestamp()
            , IFNULL(#{item.isPreview}, 0 ), IFNULL(#{item.appPreview}, 0 ), IFNULL(#{item.isH264Preview}, 0 ), IFNULL(#{item.isM3u8}, 0 )
            , IFNULL(#{item.fileName}, ''), IFNULL(#{item.convertSize}, 0 ), IFNULL(#{item.thumbSize}, 0 ), IFNULL(#{item.userId}, 0 )
            )
        </foreach>
    </insert>
    <insert id="insertMeta" useGeneratedKeys="true" keyProperty="id" >
        insert into io_file_meta(`fileID`, `key`, `value`, createTime, modifyTime)
        values (#{fileID}, #{key}, #{value}, unix_timestamp(), unix_timestamp()
        )
    </insert>

    <insert id="batchInsertMeta" useGeneratedKeys="true" keyProperty="id">
        insert into io_file_meta(`fileID`, `key`, `value`, createTime, modifyTime)
        values
        <foreach collection="list" index="index" item="item" open="" separator="," close="">
            (#{item.fileID}, #{item.key}, #{item.value}, unix_timestamp(), unix_timestamp()
            )
        </foreach>
    </insert>

    <select id="getSameSourceEmptyInfo" resultType="java.lang.Long">
        select fileID
        from io_file
        where hashMd5 = #{hashMd5} and `size` = #{size} and is_m3u8 = 0
    </select>
    <select id="getSameSourceEmptyInfoDoc" resultType="java.lang.Long">
        select fileID
        from io_file
        where hashMd5 = #{hashMd5} and `size` = #{size} and app_preview = 0
    </select>
    <update id="updateVideoConvert" >
        update io_file
        set is_m3u8 = #{isM3u8},
        is_preview = #{isPreview},
        <if test="convertSize != null">convertSize = #{convertSize},</if>
        modifyTime = unix_timestamp()
        where fileID = #{fileID}
    </update>
    <update id="updateSameFile" parameterType="com.svnlan.home.domain.CommonSource">
        update io_file
        set is_m3u8 = #{commonSource.isM3u8},
        is_preview = #{commonSource.isPreview},
        <if test="commonSource.convertSize != null">convertSize = #{commonSource.convertSize},</if>
        modifyTime = unix_timestamp()
        where fileID in
        <foreach collection="list" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
        and is_m3u8 = 0
    </update>
    <update id="updateDocConvert">
        update io_file
        set app_preview = #{appPreview},
        is_preview = #{isPreview},
        modifyTime = unix_timestamp()
        where fileID = #{fileID}
    </update>
    <update id="updateSameFileSwf">
        update io_file
        set  is_m3u8 = 1,
        modifyTime = unix_timestamp()
        where fileID in
        <foreach collection="list" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
        and is_m3u8 = 0
    </update>
    <update id="updateSameFileDoc">
        update io_file
        set app_preview = 1,
        is_preview = 1,
        modifyTime = unix_timestamp()
        where fileID in
        <foreach collection="list" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
        and app_preview = 0
    </update>

    <select id="selectByChecksum" resultType="com.svnlan.home.domain.CommonSource">
        select f.fileID, f.`name`, f.hashMd5, f.size, f.path, s.fileType, m.`value`, s.parentID, s.parentLevel, s.sourceID
         ,f.is_preview isPreview, f.is_m3u8 isM3u8, f.app_preview appPreview, f.is_h264_preview isH264Preview, f.createTime
         ,f.convertSize, f.thumbSize
        from io_file f
        left join io_source s ON f.fileID = s.fileID
        left join io_file_meta m ON f.fileID = m.fileID and m.`key` = 'fileInfoMore'
        where f.hashMd5 = #{hashMd5} and f.`size` = #{size}
        order by f.app_preview desc, f.createTime asc
        limit 1
    </select>
    <select id="getSourceInfo" resultType="com.svnlan.home.domain.CommonSource">
        select f.fileID, f.`name` , f.hashMd5, f.size, f.path, s.fileType, s.parentID, s.sourceID, s.isFolder, s.parentLevel, s.targetType, s.`name` sourceName
        , s.createUser userID, f.convertSize fileConvertSize, f.thumbSize fileThumbSize, s.convertSize, s.thumbSize
        from io_source s
        left join io_file f ON f.fileID = s.fileID
        where s.sourceID = #{sourceID}
    </select>
    <delete id="removeUserFile">
        delete from io_file
        where `fileID` in
        <foreach collection="list" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </delete>
    <delete id="removeUserFileMeta">
        delete from io_file_meta
        where `fileID` in
        <foreach collection="list" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </delete>
    <delete id="removeUserFileContents">
        delete from io_file_contents
        where `fileID` in
        <foreach collection="list" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </delete>
    <select id="getFileUrlValue" resultType="java.lang.String">
        select  `value`
        from io_file_meta
        where fileID = #{fileID} and `key` = 'fileInfoMore'
    </select>
    <select id="getFileUrlValueList" resultType="com.svnlan.home.domain.IOFileMeta">
        select  fileID, `value`
        from io_file_meta
        where fileID  in
        <foreach collection="list" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
        and `key` = 'fileInfoMore'
    </select>
    <update id="updateFileUrlValue" >
        update `io_file_meta`
        <trim prefix="set" suffixOverrides=",">
            <trim prefix=" `value` = case " suffix=" end, ">
                <foreach collection="list" item="item">
                    <if test="item.value != null">
                        when `fileID` = #{item.fileID} then #{item.value}
                    </if>
                </foreach>
            </trim>
        </trim>
        where `fileID` in
        <foreach collection="list" item="item" open="(" close=")" separator=",">
            #{item.fileID}
        </foreach>
        and `key` = 'fileInfoMore'
    </update>
    <update id="updateOneFileUrlValue" >
        update `io_file_meta` set `value` = #{value}
        where `fileID` = #{fileID} and `key` = 'fileInfoMore'
    </update>

    <select id="getFileValue" resultType="com.svnlan.home.domain.IOFileMeta">
        select  ifm.`fileID`, ifm.`value`
        from io_file_meta ifm
        left join `io_source` s on ifm.fileID = s.fileID
        where s.sourceID = #{sourceID}
        and ifm.`key` = 'fileInfoMore' limit 1
    </select>

    <select id="findCommonSourceById" resultType="com.svnlan.home.domain.CommonSource">
        select s.sourceID, s.fileType, s.parentID, s.sourceID, s.isFolder, s.createUser userID, s.parentLevel, s.size, s.targetType
        ,f.fileID, f.`name` , f.hashMd5, f.path, f.is_m3u8 isM3u8, f.is_preview isPreview, f.app_preview appPreview, f.is_h264_preview isH264Preview
        from io_source s
        join io_file f ON f.fileID = s.fileID
        where s.sourceID = #{sourceID}
    </select>
    <update id="deleteFileOrgPath" >
        update io_file
        set isExistFile = 0,
        modifyTime = unix_timestamp()
        where fileID = #{fileID}
    </update>
    <update id="updateAudioConvert" >
        update io_file
        set is_h264_preview = #{isH264Preview},
        <if test="convertSize != null"> convertSize = convertSize + #{convertSize},</if>
        modifyTime = unix_timestamp()
        where fileID = #{fileID}
    </update>

    <update id="updateCameraConvert" >
        update io_file
        set is_h264_preview = #{isH264Preview},
        <if test="thumbSize != null"> thumbSize = thumbSize + #{thumbSize},</if>
        modifyTime = unix_timestamp()
        where fileID = #{fileID}
    </update>
    <select id="getHistoryFileAttachment" resultType="com.svnlan.home.domain.CommonSource">
        select f.fileID, f.`name` , f.hashMd5, f.size, f.path, s.fileType, m.`value`, s.parentID, s.parentLevel, s.sourceID
        ,f.is_preview isPreview, f.is_m3u8 isM3u8, f.app_preview appPreview, f.is_h264_preview isH264Preview, s.targetID userID
        from io_source_history se
        LEFT JOIN io_source s on se.sourceID = s.sourceID
        left join io_file f ON f.fileID = se.fileID
        left join io_file_meta m ON f.fileID = m.fileID and m.`key` = 'fileInfoMore'
        where se.id = #{id}
    </select>
    <update id="updateFileMd5ByPath" >
        update `io_file` set `hashMd5` = #{hashMd5}
        where `path` = #{path}
    </update>

    <select id="getHistoryFileAttachmentUrl" resultType="com.svnlan.home.domain.CommonSource">
        select f.fileID, f.`name` , f.hashMd5, f.size, f.path, s.fileType
        from io_source_history se
        LEFT JOIN io_source s on se.sourceID = s.sourceID
        left join io_file f ON f.fileID = se.fileID
        where se.id = #{id}
    </select>
    <select id="getFileAttachmentUrl" resultType="com.svnlan.home.domain.CommonSource">
        select f.fileID, f.`name` , f.hashMd5, f.size, f.path, s.fileType
        from io_file f
        left join io_source s ON f.fileID = s.fileID
        where s.sourceID = #{sourceID}
    </select>
    <update id="updateFileMd5AndSizeByFileID" >
        update `io_file` set `hashMd5` = #{hashMd5}, `size` = #{size}
        where `fileID` = #{fileID}
    </update>

    <update id="updateVideoFilePath" >
        update io_file  set path = #{path}  where fileID = #{fileID} and path = ''
    </update>

    <update id="updateH264Info">
    UPDATE io_file cs
    SET cs.is_h264_preview = #{isH264Preview}, cs.modifyTime = unix_timestamp()
    WHERE cs.fileID = #{fileID}
  </update>
    <select id="selectByChecksumAndTime" resultType="com.svnlan.home.domain.CommonSource">
        select f.fileID, f.`name`, f.hashMd5, f.size, f.path, s.fileType, m.`value`, s.parentID, s.parentLevel, s.sourceID
         ,f.is_preview isPreview, f.is_m3u8 isM3u8, f.app_preview appPreview, f.is_h264_preview isH264Preview, f.createTime
         ,f.convertSize, f.thumbSize
        from io_file f
        left join io_source s ON f.fileID = s.fileID
        left join io_file_meta m ON f.fileID = m.fileID and m.`key` = 'fileInfoMore'
        where f.hashMd5 = #{hashMd5} and f.`size` = #{size} and f.createTime > #{time}
        order by f.app_preview desc, f.createTime asc
        limit 1
    </select>
</mapper>